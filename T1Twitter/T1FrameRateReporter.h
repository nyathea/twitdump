//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, T1FrameDropEventReporter;

@interface T1FrameRateReporter : NSObject
{
    _Bool _stallDetected;
    _Bool _stallTrackingEnabled;
    unsigned long long _stallCountSinceActive;
    unsigned long long _stallThreshold;
    T1FrameDropEventReporter *_frameDropEventReporter;
}

+ (id)sharedReporter;
- (void).cxx_destruct;
@property(retain) T1FrameDropEventReporter *frameDropEventReporter; // @synthesize frameDropEventReporter=_frameDropEventReporter;
@property(readonly, nonatomic) unsigned long long stallThreshold; // @synthesize stallThreshold=_stallThreshold;
@property(readonly, nonatomic) unsigned long long stallCountSinceActive; // @synthesize stallCountSinceActive=_stallCountSinceActive;
@property(readonly, nonatomic, getter=isStallTrackingEnabled) _Bool stallTrackingEnabled; // @synthesize stallTrackingEnabled=_stallTrackingEnabled;
- (void)frameRateMonitor:(id)arg1 refreshRateChangedFrom:(long long)arg2 to:(long long)arg3;
- (void)frameRateMonitor:(id)arg1 frameDropEventDetectedWithCallStackReturnAddresses:(id)arg2;
- (void)_t1_reportFrameDropEventWithCallStackReturnAddresses:(id)arg1;
- (void)_t1_reportStackTraceWithDeltaFPS:(double)arg1;
- (void)setMinimumFrameRate:(long long)arg1 maximumFrameRate:(long long)arg2 preferredFrameRate:(long long)arg3 frameDropTolerance:(long long)arg4;
- (void)setDefaultFrameRateAndTolerance;
@property(readonly, nonatomic) double cumulativeFrameRefreshDelay;
- (void)pause;
- (void)resume;
- (void)startMonitoring;
- (void)enableCallStackReportingWithFrameDropEventReporter:(id)arg1;
- (void)enableStallTracking:(_Bool)arg1 withThreshold:(unsigned long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

