//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSDictionary, NSMutableArray, NSString, NSURL, T1WebViewLogger, T1WebViewRedirectTracker, TFNBarButtonItem, TFNTwitterAccount, TFNTwitterURLParserResult, UIView, UIViewController;
@protocol TTALegacyWebViewPerspective;

@interface T1WebViewController
{
    NSArray *_loadingItemsSet;
    NSArray *_loadedItemsSet;
    _Bool _userDidNavigate;
    _Bool _viewDidInitiallyAppear;
    id <TTALegacyWebViewPerspective> _sourceStatus;
    TFNTwitterURLParserResult *_pendingURLParserResult;
    NSString *_restartSuspensionToken;
    NSString *_scribeComponent;
    NSDictionary *_scribeParameters;
    _Bool _viewIsAppearing;
    _Bool _lastRedirectWentNative;
    T1WebViewRedirectTracker *_redirectTracker;
    _Bool _userTappedButton;
    _Bool _usingInlineErrorMessage;
    _Bool _shouldOnlyScribeRedirectHosts;
    _Bool _shouldHideSecuredIcon;
    _Bool _shouldDisableExternalLinks;
    _Bool _shouldHideNavigationIcons;
    _Bool _shouldDisplayWebviewHTMLTitle;
    _Bool _shouldHideCloseButton;
    _Bool _shouldHideShareSheetIcon;
    _Bool _viewportShouldCoverSafeArea;
    _Bool _presentAsModalSheet;
    _Bool _hasCustomNavigationBar;
    _Bool _errorAlertControllerPresented;
    _Bool _allowInlineMediaPlayback;
    UIView *_errorMessage;
    TFNTwitterAccount *_account;
    TFNBarButtonItem *_rightBarButtonItem;
    TFNTwitterURLParserResult *_currentURLParserResult;
    UIViewController *_sourceViewController;
    long long _state;
    T1WebViewLogger *_webViewLogger;
    NSMutableArray *_tapGestureRecognizers;
}

+ (void)setupWithUserAgentProvider:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool allowInlineMediaPlayback; // @synthesize allowInlineMediaPlayback=_allowInlineMediaPlayback;
@property(retain, nonatomic) NSMutableArray *tapGestureRecognizers; // @synthesize tapGestureRecognizers=_tapGestureRecognizers;
@property(retain, nonatomic) T1WebViewLogger *webViewLogger; // @synthesize webViewLogger=_webViewLogger;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) __weak UIViewController *sourceViewController; // @synthesize sourceViewController=_sourceViewController;
@property(nonatomic, getter=isErrorAlertControllerPresented) _Bool errorAlertControllerPresented; // @synthesize errorAlertControllerPresented=_errorAlertControllerPresented;
@property(readonly, nonatomic) TFNTwitterURLParserResult *currentURLParserResult; // @synthesize currentURLParserResult=_currentURLParserResult;
@property(readonly, nonatomic) _Bool hasCustomNavigationBar; // @synthesize hasCustomNavigationBar=_hasCustomNavigationBar;
@property(nonatomic) _Bool presentAsModalSheet; // @synthesize presentAsModalSheet=_presentAsModalSheet;
@property(readonly, nonatomic) TFNBarButtonItem *rightBarButtonItem; // @synthesize rightBarButtonItem=_rightBarButtonItem;
@property(nonatomic) _Bool viewportShouldCoverSafeArea; // @synthesize viewportShouldCoverSafeArea=_viewportShouldCoverSafeArea;
@property(readonly, nonatomic) _Bool shouldHideShareSheetIcon; // @synthesize shouldHideShareSheetIcon=_shouldHideShareSheetIcon;
@property(nonatomic) _Bool shouldHideCloseButton; // @synthesize shouldHideCloseButton=_shouldHideCloseButton;
@property(nonatomic) _Bool shouldDisplayWebviewHTMLTitle; // @synthesize shouldDisplayWebviewHTMLTitle=_shouldDisplayWebviewHTMLTitle;
@property(nonatomic) _Bool shouldHideNavigationIcons; // @synthesize shouldHideNavigationIcons=_shouldHideNavigationIcons;
@property(nonatomic) _Bool shouldDisableExternalLinks; // @synthesize shouldDisableExternalLinks=_shouldDisableExternalLinks;
@property(nonatomic) _Bool shouldHideSecuredIcon; // @synthesize shouldHideSecuredIcon=_shouldHideSecuredIcon;
@property(nonatomic) _Bool shouldOnlyScribeRedirectHosts; // @synthesize shouldOnlyScribeRedirectHosts=_shouldOnlyScribeRedirectHosts;
@property(nonatomic) _Bool usingInlineErrorMessage; // @synthesize usingInlineErrorMessage=_usingInlineErrorMessage;
@property(readonly, nonatomic) id <TTALegacyWebViewPerspective> sourceStatus; // @synthesize sourceStatus=_sourceStatus;
@property(nonatomic) __weak TFNTwitterAccount *account; // @synthesize account=_account;
- (void)scribeDismiss;
- (id)scribeImpressionParameters;
- (id)scribeComponent;
- (id)scribeSection;
- (id)scribePage;
- (id)_scribeParamsWithRootURL:(id)arg1;
- (id)scribeParameters;
- (id)scribe;
- (_Bool)accessibilityPerformEscape;
- (void)screenTouched;
- (id)tfn_contentScrollView;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)viewControllerDidDismissAnimated:(_Bool)arg1;
- (void)viewControllerDidPresent:(id)arg1;
- (void)tfnPresentedCustomPresentFromViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_openViewControllerForURLParserResult:(id)arg1;
- (_Bool)_hasAuthorizationHeader:(id)arg1;
- (void)setNeedsTitleViewUpdate;
- (void)_getTitle:(out id *)arg1 accessoryImage:(out id *)arg2;
- (void)updateTitleView;
@property(readonly, nonatomic) NSString *displaySubtitle;
- (id)displayHTMLTitle;
@property(readonly, copy, nonatomic) NSString *displayTitle;
- (_Bool)doesURLResultTypeOpenInWebview:(long long)arg1;
- (void)setCurrentURL:(id)arg1;
- (void)_t1_webViewScrollToTop;
- (void)_navBarTapped:(id)arg1;
- (void)setWebViewHTMLTitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (_Bool)_barButtonsShouldBeOnTop;
- (void)_updateBars;
- (void)_updateToolbarItems;
- (void)_updateNavbarItems:(_Bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)_t1_applyInsets;
- (void)_setupTitleView;
- (void)_setupAntiSpamHitTestView;
- (void)_setupSubviews;
- (void)tfn_previewingStateDidChange;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)updateConfiguration:(id)arg1;
- (void)logWebViewProgressWithEstimatedProgressValue:(double)arg1;
- (void)didFinishLoadingWithError:(id)arg1;
- (_Bool)shouldStartLoadWithRequest:(id)arg1 navigationType:(long long)arg2;
- (void)willStartLoadingNavigationRequestOfType:(long long)arg1;
- (void)didReceiveNavigationRequestOfType:(long long)arg1;
- (void)presentComposer;
- (id)_t1_authenticatedURLForRootURL:(id)arg1 account:(id)arg2 status:(id)arg3;
- (void)_retryMessageTapped:(id)arg1;
@property(readonly, nonatomic) UIView *errorMessage; // @synthesize errorMessage=_errorMessage;
- (id)_authenticatedMutableURLRequestFromSourceRequest:(id)arg1 parameters:(id)arg2;
- (unsigned long long)openExternalURLAndDismissOnSuccess:(id)arg1;
- (id)protocolHandlerContext;
- (unsigned long long)tfn_supportedInterfaceOrientations;
- (void)private_logWebViewErrorMessage:(id)arg1;
- (void)private_logCustomActionSheetAction:(id)arg1;
- (void)private_showCustomShareActionSheet:(id)arg1 entityURL:(id)arg2;
- (void)private_showActivityViewController:(id)arg1 entityURL:(id)arg2;
- (void)sendViaDM:(id)arg1;
- (void)private_composeWithURLString:(id)arg1;
- (void)compose:(id)arg1;
- (void)close:(id)arg1;
- (void)tweet:(id)arg1;
- (void)action:(id)arg1;
- (void)webviewDidAutomaticallyGoBackAfterReactURLChange;
- (void)share:(id)arg1;
- (void)_fetchShareEntityURLWithCompletion:(CDUnknownBlockType)arg1;
- (void)_prepWebViewLoggerForRootURL:(id)arg1;
- (void)_t1_setCurrentURLParserResultFromURL:(id)arg1;
- (_Bool)isUsingNonPersistentDataStore;
- (void)_t1_sharedInitWithRootURL:(id)arg1 account:(id)arg2 sourceStatus:(id)arg3 scribeComponent:(id)arg4 scribeParameters:(id)arg5;
- (id)initWithRootURL:(id)arg1 account:(id)arg2 shouldAuthenticate:(_Bool)arg3 shouldPresentAsNativePage:(_Bool)arg4 allowInlineMediaPlayback:(_Bool)arg5 sourceStatus:(id)arg6 scribeComponent:(id)arg7 scribeParameters:(id)arg8;
- (id)initWithRootURL:(id)arg1 account:(id)arg2 shouldAuthenticate:(_Bool)arg3 shouldPresentAsNativePage:(_Bool)arg4 sourceStatus:(id)arg5 scribeComponent:(id)arg6 scribeParameters:(id)arg7;
- (id)initWithRootURL:(id)arg1 account:(id)arg2 sourceStatus:(id)arg3 scribeComponent:(id)arg4 scribeParameters:(id)arg5;
- (id)initWithRootURL:(id)arg1 account:(id)arg2 sourceStatus:(id)arg3 entersReaderIfAvailable:(_Bool)arg4 scribeComponent:(id)arg5 scribeParameters:(id)arg6;
- (void)dealloc;
- (_Bool)shouldStartLoadWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *presentComposerPlaceholderText;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C,N

@property(readonly, nonatomic) NSURL *rootURL;
@property(readonly) Class superclass;

@end

