//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FIRCLSDataCollectionArbiter, FIRCLSFileManager, FIRCLSInternalReport, FIRCLSOnDemandModel, FIRCLSReportUploader, FIRCLSSettings, FIRCrashlyticsReport, NSArray, NSOperationQueue;

@interface FIRCLSExistingReportManager : NSObject
{
    FIRCLSFileManager *_fileManager;
    FIRCLSReportUploader *_reportUploader;
    NSOperationQueue *_operationQueue;
    FIRCLSSettings *_settings;
    FIRCLSDataCollectionArbiter *_dataArbiter;
    FIRCLSOnDemandModel *_onDemandModel;
    NSArray *_existingUnemptyActiveReportPaths;
    NSArray *_processingReportPaths;
    NSArray *_preparedReportPaths;
    FIRCLSInternalReport *_newestInternalReport;
}

- (void).cxx_destruct;
@property(retain, nonatomic) FIRCLSInternalReport *newestInternalReport; // @synthesize newestInternalReport=_newestInternalReport;
@property(retain, nonatomic) NSArray *preparedReportPaths; // @synthesize preparedReportPaths=_preparedReportPaths;
@property(retain, nonatomic) NSArray *processingReportPaths; // @synthesize processingReportPaths=_processingReportPaths;
@property(retain, nonatomic) NSArray *existingUnemptyActiveReportPaths; // @synthesize existingUnemptyActiveReportPaths=_existingUnemptyActiveReportPaths;
@property(retain, nonatomic) FIRCLSOnDemandModel *onDemandModel; // @synthesize onDemandModel=_onDemandModel;
@property(retain, nonatomic) FIRCLSDataCollectionArbiter *dataArbiter; // @synthesize dataArbiter=_dataArbiter;
@property(retain, nonatomic) FIRCLSSettings *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) FIRCLSReportUploader *reportUploader; // @synthesize reportUploader=_reportUploader;
@property(retain, nonatomic) FIRCLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
- (void)handleOnDemandReportUpload:(id)arg1 dataCollectionToken:(id)arg2 asUrgent:(_Bool)arg3;
- (void)deleteUnsentReports;
- (void)processExistingActiveReportPath:(id)arg1 dataCollectionToken:(id)arg2 asUrgent:(_Bool)arg3;
- (void)sendUnsentReportsWithToken:(id)arg1 asUrgent:(_Bool)arg2;
- (id)getUnsentActiveReportsAndDeleteEmptyOrOld:(id)arg1;
@property(readonly, nonatomic) unsigned long long unsentReportsCount;
@property(readonly, nonatomic) FIRCrashlyticsReport *newestUnsentReport;
- (void)collectExistingReports;
- (id)initWithManagerData:(id)arg1 reportUploader:(id)arg2;

@end

