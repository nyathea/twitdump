//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSNumber, NSString;

@interface TFSAssetTAVTranscoderConfiguration : NSObject
{
    _Bool _videoEncodeOpenGOP;
    _Bool _gpuDownscalingEnabled;
    NSString *_videoCodec;
    long long _videoKeyFrameInterval;
    double _videoKeyFrameIntervalDuration;
    double _audioSampleRate;
    long long _audioBitRate;
    long long _decoderDownscalerMode;
    long long _gpuFilterNumberOfFramesToBuffer;
    NSNumber *_qualityLevel;
    double _qualityFallbackBitrateFraction;
    struct CGSize _qualityFallbackResolution;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGSize qualityFallbackResolution; // @synthesize qualityFallbackResolution=_qualityFallbackResolution;
@property(readonly, nonatomic) double qualityFallbackBitrateFraction; // @synthesize qualityFallbackBitrateFraction=_qualityFallbackBitrateFraction;
@property(readonly, nonatomic) NSNumber *qualityLevel; // @synthesize qualityLevel=_qualityLevel;
@property(readonly, nonatomic) long long gpuFilterNumberOfFramesToBuffer; // @synthesize gpuFilterNumberOfFramesToBuffer=_gpuFilterNumberOfFramesToBuffer;
@property(readonly, nonatomic) _Bool gpuDownscalingEnabled; // @synthesize gpuDownscalingEnabled=_gpuDownscalingEnabled;
@property(readonly, nonatomic) long long decoderDownscalerMode; // @synthesize decoderDownscalerMode=_decoderDownscalerMode;
@property(readonly, nonatomic) long long audioBitRate; // @synthesize audioBitRate=_audioBitRate;
@property(readonly, nonatomic) double audioSampleRate; // @synthesize audioSampleRate=_audioSampleRate;
@property(readonly, nonatomic) _Bool videoEncodeOpenGOP; // @synthesize videoEncodeOpenGOP=_videoEncodeOpenGOP;
@property(readonly, nonatomic) double videoKeyFrameIntervalDuration; // @synthesize videoKeyFrameIntervalDuration=_videoKeyFrameIntervalDuration;
@property(readonly, nonatomic) long long videoKeyFrameInterval; // @synthesize videoKeyFrameInterval=_videoKeyFrameInterval;
@property(readonly, nonatomic) NSString *videoCodec; // @synthesize videoCodec=_videoCodec;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithVideoCodec:(id)arg1 videoKeyFrameInterval:(long long)arg2 videoKeyFrameIntervalDuration:(double)arg3 videoEncodeOpenGOP:(_Bool)arg4 audioSampleRate:(double)arg5 audioBitRate:(long long)arg6 decoderDownscalerMode:(long long)arg7 gpuDownscalingEnabled:(_Bool)arg8 gpuFilterNumberOfFramesToBuffer:(long long)arg9 qualityLevel:(id)arg10 qualityFallbackBitrateFraction:(double)arg11 qualityFallbackResolution:(struct CGSize)arg12;
- (id)init;

@end

