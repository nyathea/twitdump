//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FBLPromise, FIRCLSAnalyticsManager, FIRCLSApplicationIdentifierModel, FIRCLSContextManager, FIRCLSDataCollectionArbiter, FIRCLSExecutionIdentifierModel, FIRCLSExistingReportManager, FIRCLSFileManager, FIRCLSInstallIdentifierModel, FIRCLSLaunchMarkerModel, FIRCLSMetricKitManager, FIRCLSNotificationManager, FIRCLSSettings, FIRCLSSettingsManager, GDTCORTransport, NSOperationQueue, NSString;
@protocol FIRAnalyticsInterop, OS_dispatch_queue;

@interface FIRCLSReportManager : NSObject
{
    FIRCLSFileManager *_fileManager;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSOperationQueue *_operationQueue;
    id <FIRAnalyticsInterop> _analytics;
    FBLPromise *_unsentReportsAvailable;
    FBLPromise *_reportActionProvided;
    FBLPromise *_unsentReportsHandled;
    _Atomic _Bool _checkForUnsentReportsCalled;
    _Bool _registeredAnalyticsEventListener;
    NSString *_googleAppID;
    GDTCORTransport *_googleTransport;
    FIRCLSDataCollectionArbiter *_dataArbiter;
    FIRCLSSettings *_settings;
    FIRCLSLaunchMarkerModel *_launchMarker;
    FIRCLSApplicationIdentifierModel *_appIDModel;
    FIRCLSInstallIdentifierModel *_installIDModel;
    FIRCLSExecutionIdentifierModel *_executionIDModel;
    FIRCLSAnalyticsManager *_analyticsManager;
    FIRCLSExistingReportManager *_existingReportManager;
    FIRCLSContextManager *_contextManager;
    FIRCLSSettingsManager *_settingsManager;
    FIRCLSNotificationManager *_notificationManager;
    FIRCLSMetricKitManager *_metricKitManager;
}

- (void).cxx_destruct;
@property(retain, nonatomic) FIRCLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) FIRCLSMetricKitManager *metricKitManager; // @synthesize metricKitManager=_metricKitManager;
@property(retain, nonatomic) FIRCLSNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(retain, nonatomic) FIRCLSSettingsManager *settingsManager; // @synthesize settingsManager=_settingsManager;
@property(retain, nonatomic) FIRCLSContextManager *contextManager; // @synthesize contextManager=_contextManager;
@property(retain, nonatomic) FIRCLSExistingReportManager *existingReportManager; // @synthesize existingReportManager=_existingReportManager;
@property(retain, nonatomic) FIRCLSAnalyticsManager *analyticsManager; // @synthesize analyticsManager=_analyticsManager;
@property(retain, nonatomic) FIRCLSExecutionIdentifierModel *executionIDModel; // @synthesize executionIDModel=_executionIDModel;
@property(retain, nonatomic) FIRCLSInstallIdentifierModel *installIDModel; // @synthesize installIDModel=_installIDModel;
@property(retain, nonatomic) FIRCLSApplicationIdentifierModel *appIDModel; // @synthesize appIDModel=_appIDModel;
@property(retain, nonatomic) FIRCLSLaunchMarkerModel *launchMarker; // @synthesize launchMarker=_launchMarker;
@property(retain, nonatomic) FIRCLSSettings *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) FIRCLSDataCollectionArbiter *dataArbiter; // @synthesize dataArbiter=_dataArbiter;
@property(retain, nonatomic) GDTCORTransport *googleTransport; // @synthesize googleTransport=_googleTransport;
@property(readonly, nonatomic) NSString *googleAppID; // @synthesize googleAppID=_googleAppID;
- (id)setupCurrentReport:(id)arg1;
- (_Bool)validateAppIdentifiers;
- (void)crashReportingSetupCompleted:(unsigned long long)arg1;
- (_Bool)startCrashReporterWithProfilingMark:(unsigned long long)arg1 report:(id)arg2;
- (void)beginReportUploadsWithToken:(id)arg1 blockingSend:(_Bool)arg2;
- (void)beginSettingsWithToken:(id)arg1;
- (id)startWithProfilingMark:(unsigned long long)arg1;
- (id)deleteUnsentReports;
- (id)sendUnsentReports;
- (id)checkForUnsentReports;
- (id)waitForMetricKitData;
- (id)waitForReportAction;
- (id)initWithManagerData:(id)arg1 existingReportManager:(id)arg2 analyticsManager:(id)arg3;

@end

