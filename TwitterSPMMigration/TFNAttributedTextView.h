//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class NSArray, NSString, TFNAccessibilityProxyView, TFNActiveTextItem, TFNAttributedTextModel, TFNAttributedTextRenderer, TFNAttributedTextViewConfiguration, TFNLongPressGestureRecognizer, TFNTouchDownGestureRecognizer, UIColor, UITapGestureRecognizer;
@protocol TFNAttributedTextViewDelegate, TFSActiveTextRange;

@interface TFNAttributedTextView : UIView
{
    _Bool _updateForFontSizeChanges;
    _Bool _updateForHashflagChanges;
    _Bool _isSwiftUIHosted;
    CDUnknownBlockType _updateTextAndRangesBlock;
    NSArray *_activeRanges;
    NSString *_lastSelectedString;
    UIView *_firstBaselineView;
    UIView *_lastBaselineView;
    id _hashflagVersionDidChangeObserver;
    id _imageDidDownloadObserver;
    id _menuControllerWillHideObserver;
    id _dynamicColorsDidReloadObserver;
    id _voiceOverStatusDidChangeObserver;
    _Bool _highlighted;
    _Bool _pressed;
    _Bool _selectionPaddingEnabled;
    double _preferredMaxLayoutWidth;
    id <TFNAttributedTextViewDelegate> _delegate;
    TFNAttributedTextModel *_textModel;
    long long _verticalAlignment;
    TFNTouchDownGestureRecognizer *_touchDownGestureRecognizer;
    UITapGestureRecognizer *_tapGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    TFNLongPressGestureRecognizer *_longPressGestureRecognizer;
    TFNAccessibilityProxyView *_accessibilityProxyView;
    TFNAttributedTextRenderer *_textRenderer;
}

+ (_Bool)tfn_defaultShouldFlipForRightToLeftTransform;
+ (Class)layerClass;
+ (double)selectionPadding;
- (void).cxx_destruct;
@property(readonly, nonatomic) TFNAttributedTextRenderer *textRenderer; // @synthesize textRenderer=_textRenderer;
@property(retain, nonatomic) TFNAccessibilityProxyView *accessibilityProxyView; // @synthesize accessibilityProxyView=_accessibilityProxyView;
@property(readonly, nonatomic) TFNLongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(readonly, nonatomic) TFNTouchDownGestureRecognizer *touchDownGestureRecognizer; // @synthesize touchDownGestureRecognizer=_touchDownGestureRecognizer;
@property(nonatomic, getter=isSelectionPaddingEnabled) _Bool selectionPaddingEnabled; // @synthesize selectionPaddingEnabled=_selectionPaddingEnabled;
@property(nonatomic) _Bool pressed; // @synthesize pressed=_pressed;
@property(nonatomic) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(retain, nonatomic) TFNAttributedTextModel *textModel; // @synthesize textModel=_textModel;
@property(nonatomic) __weak id <TFNAttributedTextViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double preferredMaxLayoutWidth; // @synthesize preferredMaxLayoutWidth=_preferredMaxLayoutWidth;
- (void)_tfn_didHover:(id)arg1;
- (void)_tfn_setupPointerInteractions;
- (_Bool)private_hasAccessibleFullText;
- (_Bool)private_hasAccessibleSubranges;
- (void)private_setNeedsDisplayIfRequired;
- (void)_updateAccessibilityProxy;
- (id)accessibilityElements;
- (unsigned long long)accessibilityTraits;
- (void)setIsAccessibilityElement:(_Bool)arg1;
- (id)accessibilityLabel;
- (_Bool)isAccessibilityElement;
- (void)_tfn_updateTextAndRangesIfNeeded;
- (void)tfn_fontSizeChanged;
- (void)applySwiftUIConfiguration:(id)arg1;
- (void)_tfn_hashflagVersionDidChange:(id)arg1;
- (void)_tfn_hashflagImageDidChange:(id)arg1;
- (void)_dynamicColorsDidReload:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_longPressAction;
- (void)_doubleTapAction;
- (void)_tapAction;
- (void)_touchDownAction;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (void)copy:(id)arg1;
- (void)_positionLastBaselineView;
- (void)_positionFirstBaselineView;
@property(readonly, nonatomic) _Bool highlightAllText;
@property(readonly, nonatomic) struct CGRect textRendererFrame;
@property(readonly) UIView *viewForLastBaselineLayout;
@property(readonly) UIView *viewForFirstBaselineLayout;
- (void)layoutSubviews;
- (void)sizeToFit;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGSize intrinsicContentSize;
- (void)setBounds:(struct CGRect)arg1;
- (id)activeRangesForAttributedTextRenderer:(id)arg1;
- (_Bool)_hitTestAtPoint:(struct CGPoint)arg1;
- (void)_menuWasHidden:(id)arg1;
- (void)_setupNonCodedValues;
- (void)setAttributedActiveTextModel:(id)arg1;
- (void)presentMenuController;
- (id)hitTestRanges:(id)arg1 forPoint:(struct CGPoint)arg2;
@property(retain, nonatomic) NSArray *activeRanges;
@property(readonly, nonatomic) id <TFSActiveTextRange> hitRange;
- (id)rectsForRange:(struct _NSRange)arg1;
- (struct CGRect)firstRectForRange:(struct _NSRange)arg1;
- (id)text;
- (void)setUpdateTextAndRangesBlock:(CDUnknownBlockType)arg1 updateForFontSizeChanges:(_Bool)arg2 updateForHashflagChanges:(_Bool)arg3;
@property(nonatomic, getter=isTextLayoutAnimationEnabled) _Bool textLayoutAnimationEnabled;
@property(retain, nonatomic) UIColor *selectionColor;
@property(readonly, nonatomic) double selectionRoundRadius;
@property(copy, nonatomic) TFNAttributedTextViewConfiguration *configuration;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(retain, nonatomic) TFNActiveTextItem *activeTextItem;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

