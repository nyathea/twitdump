//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSDate;

@interface TFSTwitterRelationship : NSObject
{
    MISSING_TYPE *followedByCurrentAccountState;
    MISSING_TYPE *followingCurrentAccountState;
    MISSING_TYPE *followRequestSentByCurrentAccountState;
    MISSING_TYPE *blockedByCurrentAccountState;
    MISSING_TYPE *smartBlockedByCurrentAccountState;
    MISSING_TYPE *mutedByCurrentAccountState;
    MISSING_TYPE *deviceFollowedByCurrentAccountState;
    MISSING_TYPE *liveFollowedByCurrentAccountState;
    MISSING_TYPE *exclusiveTweetFollowedByCurrentAccountState;
    MISSING_TYPE *replyDeviceFollowedByCurrentAccountState;
    MISSING_TYPE *blockingCurrentAccountState;
    MISSING_TYPE *blockedMessageByCurrentAccountState;
    MISSING_TYPE *blockingMessageCurrentAccountState;
    MISSING_TYPE *smartBlockingCurrentAccountState;
    MISSING_TYPE *canDMByCurrentAccountState;
    MISSING_TYPE *wantRetweetsState;
    MISSING_TYPE *canMediaTagState;
    MISSING_TYPE *superFollowPlatformAvailabilityState;
    MISSING_TYPE *superFollowEligibleState;
    MISSING_TYPE *superFollowedByState;
    MISSING_TYPE *superFollowingState;
    MISSING_TYPE *privateSuperFollowingState;
    MISSING_TYPE *updatedTime;
    MISSING_TYPE *fullyUpdatedTime;
    MISSING_TYPE *smartBlockedByCurrentAccountExpirationDate;
}

+ (id)followingCurrentAccountRelationship;
+ (id)followRequestCancelledRelationship;
+ (id)followRequestedRelationship;
+ (id)unfollowRelationship;
+ (id)followRelationship;
+ (id)unmutedRelationship;
+ (id)mutedRelationship;
+ (id)unblockedMessageRelationship;
+ (id)blockedMessageRelationship;
+ (id)unblockedRelationship;
+ (id)blockedRelationship;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
@property(nonatomic, readonly) long long hash;
- (id)updatedRelationshipWithRelationship:(id)arg1;
- (id)initWithFollowedByCurrentAccountState:(long long)arg1 followingCurrentAccountState:(long long)arg2 followRequestSentByCurrentAccountState:(long long)arg3 deviceFollowedByCurrentAccountState:(long long)arg4 liveFollowedByCurrentAccountState:(long long)arg5 exclusiveTweetFollowedByCurrentAccountState:(long long)arg6 replyDeviceFollowedByCurrentAccountState:(long long)arg7 blockedByCurrentAccountState:(long long)arg8 blockingCurrentAccountState:(long long)arg9 blockedMessageByCurrentAccountState:(long long)arg10 blockingMessageCurrentAccountState:(long long)arg11 canDMByCurrentAccountState:(long long)arg12 mutedByCurrentAccountState:(long long)arg13 wantRetweetsState:(long long)arg14 canMediaTagState:(long long)arg15 superFollowPlatformAvailabilityState:(long long)arg16 superFollowEligibleState:(long long)arg17 superFollowedByState:(long long)arg18 superFollowingState:(long long)arg19 privateSuperFollowingState:(long long)arg20 updatedTime:(double)arg21 fullyUpdatedTime:(double)arg22 smartBlockedByCurrentAccountState:(long long)arg23 smartBlockingCurrentAccountState:(long long)arg24 smartBlockedByCurrentAccountExpirationDate:(id)arg25;
- (id)initWithFollowedByCurrentAccount:(long long)arg1 followingCurrentAccount:(long long)arg2 deviceFollowedByCurrentAccount:(long long)arg3 liveFollowedByCurrentAccount:(long long)arg4 exclusiveTweetFollowedByCurrentAccountState:(long long)arg5 replyDeviceFollowedByCurrentAccountState:(long long)arg6 followRequestSentByCurrentAccount:(long long)arg7 blockedByCurrentAccount:(long long)arg8 blockingCurrentAccount:(long long)arg9 blockedMessageByCurrentAccount:(long long)arg10 blockingMessageCurrentAccount:(long long)arg11 superFollowPlatformAvailability:(long long)arg12 superFollowEligible:(long long)arg13 superFollowedBy:(long long)arg14 superFollowing:(long long)arg15 privateSuperFollowing:(long long)arg16;
- (id)init;
@property(nonatomic, readonly) _Bool isFreshFullRelationship;
@property(nonatomic, readonly) _Bool isFreshRelationship;
@property(nonatomic, readonly) NSDate *smartBlockedByCurrentAccountExpirationDate;
@property(nonatomic, readonly) double fullyUpdatedTime; // @synthesize fullyUpdatedTime;
@property(nonatomic, readonly) double updatedTime; // @synthesize updatedTime;
@property(nonatomic, readonly) long long privateSuperFollowingState; // @synthesize privateSuperFollowingState;
@property(nonatomic, readonly) long long superFollowingState; // @synthesize superFollowingState;
@property(nonatomic, readonly) long long superFollowedByState; // @synthesize superFollowedByState;
@property(nonatomic, readonly) long long superFollowEligibleState; // @synthesize superFollowEligibleState;
@property(nonatomic, readonly) long long superFollowPlatformAvailabilityState; // @synthesize superFollowPlatformAvailabilityState;
@property(nonatomic, readonly) long long canMediaTagState; // @synthesize canMediaTagState;
@property(nonatomic, readonly) long long wantRetweetsState; // @synthesize wantRetweetsState;
@property(nonatomic, readonly) long long canDMByCurrentAccountState; // @synthesize canDMByCurrentAccountState;
@property(nonatomic, readonly) long long smartBlockingCurrentAccountState; // @synthesize smartBlockingCurrentAccountState;
@property(nonatomic, readonly) long long blockingMessageCurrentAccountState; // @synthesize blockingMessageCurrentAccountState;
@property(nonatomic, readonly) long long blockedMessageByCurrentAccountState; // @synthesize blockedMessageByCurrentAccountState;
@property(nonatomic, readonly) long long blockingCurrentAccountState; // @synthesize blockingCurrentAccountState;
@property(nonatomic, readonly) long long replyDeviceFollowedByCurrentAccountState; // @synthesize replyDeviceFollowedByCurrentAccountState;
@property(nonatomic, readonly) long long exclusiveTweetFollowedByCurrentAccountState; // @synthesize exclusiveTweetFollowedByCurrentAccountState;
@property(nonatomic, readonly) long long liveFollowedByCurrentAccountState; // @synthesize liveFollowedByCurrentAccountState;
@property(nonatomic, readonly) long long deviceFollowedByCurrentAccountState; // @synthesize deviceFollowedByCurrentAccountState;
@property(nonatomic, readonly) long long mutedByCurrentAccountState; // @synthesize mutedByCurrentAccountState;
@property(nonatomic, readonly) long long smartBlockedByCurrentAccountState; // @synthesize smartBlockedByCurrentAccountState;
@property(nonatomic, readonly) long long blockedByCurrentAccountState; // @synthesize blockedByCurrentAccountState;
@property(nonatomic, readonly) long long followRequestSentByCurrentAccountState; // @synthesize followRequestSentByCurrentAccountState;
@property(nonatomic, readonly) long long followingCurrentAccountState; // @synthesize followingCurrentAccountState;
@property(nonatomic, readonly) long long followedByCurrentAccountState; // @synthesize followedByCurrentAccountState;

@end

