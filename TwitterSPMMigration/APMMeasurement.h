//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class APMAlarm, APMAudience, APMDatabase, APMEManager, APMIdentity, APMPersistedConfig, APMRemoteConfig, APMScheduler, APMSearchAdReporter, APMSessionReporter, GULNetwork, NSArray, NSString;
@protocol APMMeasurementDelegate, APMPrivateSetMembershipClient;

@interface APMMeasurement : NSObject
{
    NSString *_databaseName;
    _Atomic _Bool _didInitializeComponents;
    struct _opaque_pthread_mutex_t _initializeComponentsLock;
    APMAlarm *_alarm;
    APMAudience *_audience;
    APMDatabase *_database;
    APMIdentity *_identity;
    GULNetwork *_network;
    APMPersistedConfig *_persistedConfig;
    APMRemoteConfig *_remoteConfig;
    APMScheduler *_scheduler;
    APMSessionReporter *_sessionReporter;
    APMSearchAdReporter *_searchAdReporter;
    APMEManager *_experimentManager;
    id <APMPrivateSetMembershipClient> _privateSetMembershipClient;
    _Bool _isPSMRequestInProgress;
    _Bool _isPSMRequestPostponed;
    int _PSMStartCount;
    int _PSMRetryCount;
    APMAlarm *_PSMRetryAlarm;
    _Bool _isSKANRequestInProgress;
    _Bool _fetchSKANWhenNetworkConnected;
    long long _lastEventEndTimestampMsec;
    int _SKANRetryCount;
    APMAlarm *_SKANRetryAlarm;
    APMAlarm *_SKANDelayAlarm;
    NSArray *_uploadingBundleIDs;
    NSString *_previousGMPAppID;
    _Atomic unsigned long long _backgroundUpdateTask;
    double _initTimestamp;
    double _suspendedUploadTimestamp;
    NSString *_appID;
    NSArray *_safelistedEvents;
    _Bool _foundAdPersonalizationPlistFlag;
    _Bool _shouldUpdateNPAUserProperty;
    _Bool _shouldRequestDeferredDeepLinkAfterConfigFetch;
    _Bool _enabled;
    _Bool _wasEnabledDuringInitialization;
    _Bool _isAnalyticsCollectionEnabled;
    _Bool _isAnalyticsCollectionDeactivated;
    _Bool _isNetworkRequestPending;
    id <APMMeasurementDelegate> _measurementDelegate;
}

+ (void)notCalled;
+ (void)handleAppDidFinishLaunching:(id)arg1;
+ (void)subscribeForAppDidFinishLaunchingNotifications;
+ (void)load;
+ (id)remoteConfig;
+ (id)monitor;
+ (id)sharedInstance;
+ (_Bool)hasSharedInstance;
+ (void)initializeSharedInstanceWithAppID:(id)arg1 isAnalyticsCollectionEnabled:(_Bool)arg2 isAnalyticsCollectionDeactivated:(_Bool)arg3 safelistedEvents:(id)arg4;
+ (void)handleStoredURLAfterAppLaunchWithNotification:(id)arg1;
+ (id)deepLinkFromUserActivity:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) APMAlarm *SKANDelayAlarm; // @synthesize SKANDelayAlarm=_SKANDelayAlarm;
@property(retain, nonatomic) APMAlarm *SKANRetryAlarm; // @synthesize SKANRetryAlarm=_SKANRetryAlarm;
@property(nonatomic) int SKANRetryCount; // @synthesize SKANRetryCount=_SKANRetryCount;
@property(nonatomic) long long lastEventEndTimestampMsec; // @synthesize lastEventEndTimestampMsec=_lastEventEndTimestampMsec;
@property(nonatomic) _Bool fetchSKANWhenNetworkConnected; // @synthesize fetchSKANWhenNetworkConnected=_fetchSKANWhenNetworkConnected;
@property(nonatomic) _Bool isSKANRequestInProgress; // @synthesize isSKANRequestInProgress=_isSKANRequestInProgress;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(nonatomic) __weak id <APMMeasurementDelegate> measurementDelegate; // @synthesize measurementDelegate=_measurementDelegate;
@property(nonatomic) _Bool isNetworkRequestPending; // @synthesize isNetworkRequestPending=_isNetworkRequestPending;
@property(nonatomic) _Bool isAnalyticsCollectionDeactivated; // @synthesize isAnalyticsCollectionDeactivated=_isAnalyticsCollectionDeactivated;
@property(nonatomic) _Bool isAnalyticsCollectionEnabled; // @synthesize isAnalyticsCollectionEnabled=_isAnalyticsCollectionEnabled;
@property(readonly, nonatomic) _Bool wasEnabledDuringInitialization; // @synthesize wasEnabledDuringInitialization=_wasEnabledDuringInitialization;
@property(readonly, nonatomic) APMSessionReporter *sessionReporter; // @synthesize sessionReporter=_sessionReporter;
@property(readonly, nonatomic) APMDatabase *database; // @synthesize database=_database;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, nonatomic) GULNetwork *network;
@property(readonly, nonatomic) APMIdentity *identity;
@property(readonly, nonatomic) NSArray *safelistedEvents;
@property(readonly, nonatomic) APMScheduler *scheduler;
- (id)remoteConfigInstance;
@property(readonly, nonatomic) APMPersistedConfig *persistedConfig;
@property(readonly, nonatomic) APMAudience *audience;
@property(readonly, nonatomic) APMAlarm *alarm;
- (void)setSuspendedUploadTimestamp:(double)arg1;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)GULNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (_Bool)isFirebaseRemoteConfigSDKPresent;
- (void)handleAppWillResignActiveEvent:(id)arg1;
- (void)terminateBackgroundTask;
- (void)handleAppWillEnterForegroundNotification:(id)arg1;
- (void)handleAppDidBecomeActiveEvent:(id)arg1;
- (void)swapBackgroundTaskWithNewTaskID:(unsigned long long)arg1;
- (void)subscribeForAppForegroundBackgroundNotifications;
- (void)filterPurchaseTransactions:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)networkRemoteConfigFetchCompletionHandler:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)fetchRemoteConfig;
- (double)firstOpenTimestamp;
- (_Bool)removeBundlesFromDatabaseWithIDs:(id)arg1;
- (_Bool)hasDataToUpload;
- (_Bool)wipeoutAnalyticsDataAndResetComponents;
- (_Bool)resetAnalyticsDataWithAppInstanceID:(id)arg1;
- (void)resetPSMCounts;
- (void)maybeDeleteExpiredPSMValueOnWorkerQueue;
- (void)incrementPSMCountOnWorkerQueueWithName:(id)arg1;
- (void)handlePSMValueOnWorkerQueue:(id)arg1;
- (void)maybeSchedulePSMRetry;
- (void)retrievePSMResponse;
- (id)PSMClientWithHashedPhoneNumber:(id)arg1;
- (id)PSMClientWithHashedEmailAddress:(id)arg1;
- (_Bool)shouldRetrievePSMResponseWithHashedIdentifier:(id)arg1;
- (id)PSMClientWithPhoneNumber:(id)arg1;
- (_Bool)shouldRetrievePSMResponseWithPhoneNumber:(id)arg1;
- (id)PSMClientWithEmailAddress:(id)arg1;
- (_Bool)shouldRetrievePSMResponseWithEmailAddress:(id)arg1;
- (_Bool)shouldRetrievePSMResponse;
- (void)checkPSMDependencyOnWorkerQueue;
- (id)PSMClientClass;
- (void)setUserDataOnWorkerQueue:(id)arg1;
- (void)setUserData:(id)arg1;
- (void)sessionIDWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)hasUserPropertyUserIDOnWorkerQueue;
- (void)setLastAdvertisingIDResetUserPropertyOnWorkerQueue;
- (_Bool)shouldAllowAdNetworkRegistration;
- (id)shouldDisableAdPersonalization;
@property(nonatomic) _Bool shouldUpdateNPAUserProperty;
- (void)maxUserPropertiesForOrigin:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userPropertiesIncludingInternal:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userAttributeWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (long long)setUserPropertyInDatabaseOnWorkerQueue:(id)arg1;
- (void)setUserAttributeOnWorkerQueue:(id)arg1;
- (void)setUserAttribute:(id)arg1;
- (void)removeUserAttributeOnWorkerQueue:(id)arg1;
- (void)removeUserAttribute:(id)arg1;
@property(copy, nonatomic) NSString *previousFirstOpenCount;
- (id)parametersWithAddedDefaultEventParameters:(id)arg1;
- (void)handleSetDefaultEventParametersOnWorkerQueue:(id)arg1;
- (void)setDefaultEventParameters:(id)arg1;
- (void)logEvent:(id)arg1;
- (void)logEventOnWorkerQueue:(id)arg1 notifyEventListeners:(_Bool)arg2;
- (void)logEventOnWorkerQueueWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 enabled:(_Bool)arg6 ignoreEnabled:(_Bool)arg7 ignoreInterceptor:(_Bool)arg8 interceptor:(CDUnknownBlockType)arg9 addedScreenParameters:(id)arg10;
- (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 enabled:(_Bool)arg6 ignoreEnabled:(_Bool)arg7 ignoreInterceptor:(_Bool)arg8 interceptor:(CDUnknownBlockType)arg9 addedScreenParameters:(id)arg10;
- (void)setUploadInProgressWithBundleIDs:(id)arg1;
- (void)incrementRetryCounter;
- (void)networkUploadCompletionHandlerWithResponse:(id)arg1 error:(id)arg2;
- (id)filteredBundlesWithCompatibleAppID:(id)arg1 resettableDeviceID:(id)arg2 vendorDeviceID:(id)arg3 bundlesToUpload:(id)arg4;
- (_Bool)isNetworkReadyForRequest;
- (void)uploadData;
- (void)uploadDataOrRegisterAlarm;
- (_Bool)shouldUseBackgroundSession;
- (double)nextUploadingTime;
- (void)updateSchedule;
- (void)backfillSessionNumber;
- (void)setSessionTimeoutInterval:(double)arg1;
- (_Bool)isVersionSameAsOriginalVersion;
- (id)fileAttributesForPath:(id)arg1;
- (long long)timestampMillisRoundedUpToNextHour:(long long)arg1;
- (void)updateConsentSettingsUtilWithRemoteConfig;
- (void)updateAdPersonalizationConsentFromNPAValue:(id)arg1;
- (void)setPersonalizedAdsUserPropertyOnWorkerQueue;
- (void)reportOSUpdateOnWorkerQueue;
- (void)reportAppUpdateOnWorkerQueue;
- (void)reportFirstOpenOnWorkerQueue;
- (void)reportSessionStartWhenSceneWillConnectOnWorkerQueue;
- (void)reportSessionStart;
- (void)reportSessionStartOnWorkerQueueWithTimestamp:(double)arg1 appInBackground:(_Bool)arg2;
- (void)reportStoredCampaignEventOnWorkerQueue:(id)arg1;
- (void)reachabilityDidChange;
- (void)setDidInitializeComponents:(_Bool)arg1;
@property(readonly, nonatomic) _Bool didInitializeComponents;
- (_Bool)startMeasurementOnWorkerQueue;
- (void)updatePersistedAppIDFromGMPAndAdMob;
- (void)setProspectiveConsentSettings;
- (_Bool)shouldWipeDataWithAppID:(id)arg1 appIDFromGMP:(id)arg2 appIDFromAdMob:(id)arg3 persistedAppIDFromGMP:(id)arg4 persistedAppIDFromAdMob:(id)arg5;
- (void)setEnabledOnWorkerQueue:(_Bool)arg1;
- (void)dealloc;
- (_Bool)shouldEnableMeasurement;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 network:(id)arg3 scheduler:(id)arg4 alarm:(id)arg5 appID:(id)arg6 isAnalyticsCollectionEnabled:(_Bool)arg7 isAnalyticsCollectionDeactivated:(_Bool)arg8 safelistedEvents:(id)arg9 experimentManager:(id)arg10;
- (id)initWithAppID:(id)arg1 isAnalyticsCollectionEnabled:(_Bool)arg2 isAnalyticsCollectionDeactivated:(_Bool)arg3 safelistedEvents:(id)arg4 experimentManager:(id)arg5;
- (void)addBundleMetadataIntoBundle:(id)arg1 bundleStartTimestamp:(double)arg2 bundleEndTimestamp:(double)arg3;
- (_Bool)updateUserEngagement:(long long)arg1 bundle:(id)arg2 sessionScoped:(_Bool)arg3;
- (_Bool)updateAppMetadataForBundle:(id)arg1 bundleStartTimestamp:(double)arg2 bundleEndTimestamp:(double)arg3;
- (id)eventsAfterUpdatingEventAggregates:(id)arg1 audienceTimestampsCache:(id)arg2;
- (id)rawEventsWithMetadataFingerprint:(long long)arg1;
- (id)evaluationTimeFromRawEvents:(id)arg1 bundle:(id)arg2;
- (id)processRawEvents:(id)arg1 metadata:(long long)arg2;
- (id)validatePurchaseEvent:(id)arg1;
- (id)internalEventFromPublicEvent:(id)arg1;
- (_Bool)checkRealtime:(id)arg1 dailyCounts:(id)arg2;
- (_Bool)checkConversion:(id)arg1 dailyCounts:(id)arg2;
- (_Bool)bundleRawEvents;
- (void)logFirstOpenConsentedEvent:(double)arg1;
- (void)maybeAddDebugAndRealtimeParameters:(id)arg1;
- (_Bool)writeEvent:(id)arg1 isPublicEvent:(_Bool)arg2 isRealtime:(_Bool)arg3;
- (_Bool)isRealtimeEvent:(id)arg1 dailyCounts:(id)arg2;
- (_Bool)shouldProcessEvent:(id)arg1 dailyCounts:(id)arg2 isPublicEvent:(_Bool)arg3;
- (_Bool)updateLifetimeValueWithEvent:(id)arg1;
- (void)writeSessionStartEventOnWorkerQueue:(id)arg1;
- (id)appExceptionEventWithFirebaseFeatureRollouts:(id)arg1;
- (_Bool)shouldDropDuplicatedSessionStartWithRolloutEvent:(id)arg1;
- (_Bool)dedupeSubscriptionEvent:(id)arg1;
- (id)eventAfterSafelistingEvent:(id)arg1;
- (void)processSessionFromEvent:(id)arg1;
- (id)createRawEventMetadataWithUserAttributes:(id)arg1;
- (void)writeFilteredEventOnWorkerQueue:(id)arg1;
- (void)writeEventOnWorkerQueue:(id)arg1;
- (void)handleEventOnWorkerQueue:(id)arg1;
- (void)handleInternalEventOnWorkerQueue:(id)arg1;
- (_Bool)canEventBeSampled:(id)arg1;
- (id)sampleEvents:(id)arg1 error:(id *)arg2;
- (_Bool)isEventBundledAfterRoll:(int)arg1;
- (void)maybeFetchSKANCVAfterReachabilityChange;
- (void)stopProcessingSKANResponseAndResetRetryCount;
- (void)maybeScheduleSKANCVFetchRetry;
- (void)handleSKANUpdatePostbackCompletion:(id)arg1 error:(id)arg2;
- (void)updateSKANPostbackConversionValueFromResponse:(id)arg1;
- (void)handleSKANFetchResponse:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)fetchSKANCV;
- (void)scheduleSKANCVFetchAfterDataUpload;
- (_Bool)shouldFetchSKANConversionValue;
- (int)SKANFetchRetryLimit;
- (id)convertCoarseConversionValueFromProtoValue:(int)arg1;
- (_Bool)isValidFineConversionValue:(int)arg1;
- (_Bool)isPastAllSKANPostbackWindows;
- (_Bool)isInFirstSKANPostbackWindow;
- (id)SKANVersion;
- (_Bool)isValidCampaignURLParamDictionary:(id)arg1;
- (void)handleDebugModeWithURL:(id)arg1;
- (void)handleOpenURLOnWorkerQueue:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3 extraParameters:(id)arg4;
- (_Bool)shouldAllowClickID;
- (void)handleDeepLink:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleOpenURL:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleNonFirstOpenEventURL:(id)arg1 eventTimestampInSeconds:(double)arg2;
- (_Bool)sendDeepLinkURLToAppDelegateOnMainThread:(id)arg1 extraInfo:(id)arg2;
- (void)handleDeferredDeepLinkInfo:(id)arg1;
- (id)deepLinkInfoFromResponseData:(id)arg1;
- (void)requestDeferredDeepLink;
- (_Bool)shouldAllowRequestDeferredDeepLink;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

