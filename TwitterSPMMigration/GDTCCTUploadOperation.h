//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSOperation.h>

@class GDTCORMetrics, NSObject, NSString, NSURL, NSURLSession, NSURLSessionUploadTask;
@protocol GDTCCTUploadMetadataProvider, GDTCORMetricsControllerProtocol, GDTCORStoragePromiseProtocol, OS_dispatch_queue;

@interface GDTCCTUploadOperation : NSOperation
{
    _Bool _executing;
    _Bool _finished;
    _Bool _uploadAttempted;
    NSObject<OS_dispatch_queue> *_uploaderQueue;
    NSURLSessionUploadTask *_currentTask;
    long long _target;
    long long _conditions;
    NSURL *_uploadURL;
    id <GDTCORStoragePromiseProtocol> _storage;
    id <GDTCCTUploadMetadataProvider> _metadataProvider;
    id <GDTCORMetricsControllerProtocol> _metricsController;
    NSURLSession *_uploaderSession;
    GDTCORMetrics *_currentMetrics;
}

- (void).cxx_destruct;
@property(retain, nonatomic) GDTCORMetrics *currentMetrics; // @synthesize currentMetrics=_currentMetrics;
@property(retain, nonatomic) NSURLSession *uploaderSession; // @synthesize uploaderSession=_uploaderSession;
@property(readonly, nonatomic) id <GDTCORMetricsControllerProtocol> metricsController; // @synthesize metricsController=_metricsController;
@property(readonly, nonatomic) id <GDTCCTUploadMetadataProvider> metadataProvider; // @synthesize metadataProvider=_metadataProvider;
@property(readonly, nonatomic) id <GDTCORStoragePromiseProtocol> storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) NSURL *uploadURL; // @synthesize uploadURL=_uploadURL;
@property(readonly, nonatomic) long long conditions; // @synthesize conditions=_conditions;
@property(readonly, nonatomic) long long target; // @synthesize target=_target;
@property(readonly, nonatomic) NSURLSessionUploadTask *currentTask; // @synthesize currentTask=_currentTask;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *uploaderQueue; // @synthesize uploaderQueue=_uploaderQueue;
@property(nonatomic) _Bool uploadAttempted; // @synthesize uploadAttempted=_uploadAttempted;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(nonatomic, getter=isExecuting) _Bool executing; // @synthesize executing=_executing;
- (void)cancel;
- (void)start;
- (void)finishOperation;
- (void)startOperation;
- (_Bool)isAsynchronous;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)batchByAddingMetricsEventToBatch:(id)arg1 forTarget:(long long)arg2;
- (id)eventSelectorTarget:(long long)arg1 withConditions:(long long)arg2;
- (id)constructRequestWithURL:(id)arg1 forTarget:(long long)arg2 data:(id)arg3;
- (id)constructRequestProtoWithEvents:(id)arg1;
- (_Bool)readyToUploadTarget:(long long)arg1 conditions:(long long)arg2;
- (id)genericRejectedPromiseErrorWithReason:(id)arg1;
- (id)isReadyToUploadTarget:(long long)arg1 conditions:(long long)arg2;
- (void)updateNextUploadTimeWithResponse:(id)arg1 forTarget:(long long)arg2;
- (id)sendURLRequestWithBatch:(id)arg1 target:(long long)arg2;
- (id)processResponse:(id)arg1 forBatch:(id)arg2 storage:(id)arg3;
- (id)uploadBatch:(id)arg1 toTarget:(long long)arg2 storage:(id)arg3;
- (void)uploadTarget:(long long)arg1 withConditions:(long long)arg2;
- (id)uploaderSessionCreateIfNeeded;
- (id)initWithTarget:(long long)arg1 conditions:(long long)arg2 uploadURL:(id)arg3 queue:(id)arg4 storage:(id)arg5 metadataProvider:(id)arg6 metricsController:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

