//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface FIRAnalytics : NSObject
{
}

+ (double)loadTimestamp;
+ (void)unsuspendOperationQueue;
+ (void)queueOperationWithBlock:(CDUnknownBlockType)arg1;
+ (void)dispatchAsyncOnSerialQueue:(CDUnknownBlockType)arg1;
+ (void)notCalled;
+ (void)observeFirebaseInstallationIDChanges;
+ (void)updateFirebaseInstallationID;
+ (void)handleUserActivity:(id)arg1;
+ (void)handleOpenURL:(id)arg1;
+ (void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)startWithConfiguration:(id)arg1 options:(id)arg2;
+ (void)setDefaultEventParameters:(id)arg1;
+ (void)userPropertiesIncludingInternal:(_Bool)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7;
+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)setOpenURLListener:(CDUnknownBlockType)arg1;
+ (void)notifyEventListeners:(id)arg1;
+ (void)removeLogEventListener:(id)arg1;
+ (id)addLogEventListener:(CDUnknownBlockType)arg1;
+ (void)setLogEventInterceptor:(CDUnknownBlockType)arg1;
+ (id)sharedInstance;
+ (void)initiateOnDeviceConversionMeasurementWithHashedPhoneNumber:(id)arg1;
+ (void)initiateOnDeviceConversionMeasurementWithHashedEmailAddress:(id)arg1;
+ (void)initiateOnDeviceConversionMeasurementWithPhoneNumber:(id)arg1;
+ (void)initiateOnDeviceConversionMeasurementWithEmailAddress:(id)arg1;
+ (void)setConsent:(id)arg1;
+ (void)resetAnalyticsData;
+ (id)appInstanceID;
+ (void)sessionIDWithCompletion:(CDUnknownBlockType)arg1;
+ (void)setSessionTimeoutInterval:(double)arg1;
+ (void)setAnalyticsCollectionEnabled:(_Bool)arg1;
+ (void)setUserID:(id)arg1;
+ (void)setUserPropertyString:(id)arg1 forName:(id)arg2;
+ (void)logTransactionWithProductID:(id)arg1 paymentQuantity:(long long)arg2 transactionIdentifier:(id)arg3 originalTransactionIdentifier:(id)arg4 transactionDate:(id)arg5 deviceVerification:(id)arg6 deviceVerificationUUID:(id)arg7 deviceVerificationNonce:(id)arg8;
+ (void)logEventWithName:(id)arg1 parameters:(id)arg2;
+ (id)topLevelVersion;
- (void)maxUserPropertiesForOrigin:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setInternalUserProperty:(id)arg1 forName:(id)arg2 withOrigin:(id)arg3;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
- (id)initInternal;

@end

