//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSString, TFSFeatureSwitchesConfig, TFSFeatureSwitchesHostQueue, TFSFeatureSwitchesIntegration, TFSFeatureSwitchesManifest, TFSStateQueue;
@protocol TFSFeatureSwitchesHosting;

@interface TFSFeatureSwitchesService : NSObject
{
    TFSFeatureSwitchesIntegration *_integration;
    TFSFeatureSwitchesManifest *_manifest;
    TFSFeatureSwitchesHostQueue *_hostQueue;
    TFSStateQueue *_accountIDToFeatureSwitchesQueue;
    TFSFeatureSwitchesConfig *_deviceOverrideConfig;
}

+ (void)shutdown;
+ (id)sharedServiceWithIntegration:(id)arg1 error:(out id *)arg2;
+ (id)sharedServiceWithError:(out id *)arg1;
+ (id)sharedServiceQueue;
- (void).cxx_destruct;
@property(readonly, nonatomic) TFSFeatureSwitchesConfig *deviceOverrideConfig; // @synthesize deviceOverrideConfig=_deviceOverrideConfig;
@property(readonly, nonatomic) TFSStateQueue *accountIDToFeatureSwitchesQueue; // @synthesize accountIDToFeatureSwitchesQueue=_accountIDToFeatureSwitchesQueue;
@property(readonly, nonatomic) TFSFeatureSwitchesHostQueue *hostQueue; // @synthesize hostQueue=_hostQueue;
@property(readonly, nonatomic) TFSFeatureSwitchesManifest *manifest; // @synthesize manifest=_manifest;
@property(readonly, copy, nonatomic) TFSFeatureSwitchesIntegration *integration; // @synthesize integration=_integration;
- (void)_uncacheFeatureSwitchesForAccountID:(id)arg1;
- (id)_featureSwitchesForAccount:(id)arg1 withState:(id)arg2;
- (id)_featureSwitchesForAccount:(id)arg1;
- (void)resetImpressions;
- (void)resetImpressionsForAccountID:(id)arg1;
- (_Bool)accountID:(id)arg1 isInExperimentForKey:(id)arg2;
- (void)partiallyApplyPendingForAccount:(id)arg1 keys:(id)arg2;
- (void)applyPendingForAccount:(id)arg1;
- (void)forceRefreshForAccount:(id)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)refreshForAccountID:(id)arg1 timeout:(double)arg2 maxStale:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (id)rawFeatureSwitchesDictionaryForAccountID:(id)arg1;
- (id)rawValueForKey:(id)arg1 accountID:(id)arg2;
- (id)setForKey:(id)arg1 accountID:(id)arg2;
- (id)arrayForKey:(id)arg1 accountID:(id)arg2;
- (id)stringForKey:(id)arg1 accountID:(id)arg2;
- (id)numberForKey:(id)arg1 accountID:(id)arg2;
- (long long)integerForKey:(id)arg1 accountID:(id)arg2;
- (double)CGFloatForKey:(id)arg1 accountID:(id)arg2;
- (double)doubleForKey:(id)arg1 accountID:(id)arg2;
- (_Bool)boolForKey:(id)arg1 accountID:(id)arg2;
- (_Bool)removeAccountID:(id)arg1;
- (id)ceolAllowlistWithAccountId:(id)arg1;
@property(readonly, nonatomic) NSString *featureSetToken;
- (void)shutdown;
@property(retain, nonatomic) id <TFSFeatureSwitchesHosting> host;
- (id)initWithIntegration:(id)arg1 error:(out id *)arg2;
- (id)init;
- (id)archivePathForAccountID:(id)arg1;
- (_Bool)accountID:(id)arg1 hasNonDefaultValueForKey:(id)arg2;
- (double)unsafePeekDoubleForKey:(id)arg1 accountID:(id)arg2;
- (_Bool)unsafePeekBoolForKey:(id)arg1 accountID:(id)arg2;
- (id)unsafePeekSetForKey:(id)arg1 accountID:(id)arg2;
- (id)unsafePeekArrayForKey:(id)arg1 accountID:(id)arg2;
- (id)unsafePeekStringForKey:(id)arg1 accountID:(id)arg2;
- (long long)unsafePeekIntegerForKey:(id)arg1 accountID:(id)arg2;
- (id)queriedKeysAndValuesForTestCase;
- (id)overriddenFeatureSwitchKeysForTestCase;
- (id)overriddenFeatureSwitchKeysForRun;
- (id)queriedFeatureSwitchKeysForRun;
- (void)resetFeatureSwitchValueForKey:(id)arg1 accountID:(id)arg2;
- (void)setFeatureSwitchValue:(id)arg1 forKey:(id)arg2 accountID:(id)arg3;
- (void)resetFeatureSwitchesForAccountID:(id)arg1;
- (void)removeOverrideForKey:(id)arg1 accountID:(id)arg2;
- (id)overriddenRawValueForKey:(id)arg1 accountID:(id)arg2;
- (void)disableAllValuesForKeys:(id)arg1 accountID:(id)arg2;
- (void)overrideAllValuesInDictionary:(id)arg1 accountID:(id)arg2;
- (void)overrideRawValue:(id)arg1 forKey:(id)arg2 accountID:(id)arg3;
- (id)featureSwitchValueForKey:(id)arg1 accountID:(id)arg2;
- (_Bool)updateAccountID:(id)arg1 config:(id)arg2;
- (_Bool)updateAccountID:(id)arg1 configData:(id)arg2;
- (id)featureSwitchesForAccount:(id)arg1;

@end

