//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADIAccountDependencyContainer, NSArray, NSDate, NSDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, TAFDynamicVideoAdManager, TBCPeriscopeAccount, TBCPeriscopeAccountManager, TCMCommunitiesContext, TFCCardPersistedStateManager, TFNDirectMessageService, TFNTwitterAccountModel, TFNTwitterCachableVideoMonetizationSettings, TFNTwitterCompositionOutboxController, TFNTwitterCompositionPersistenceManager, TFNTwitterHomeMutingSet, TFNTwitterLoginVerification, TFNTwitterPromotedEventLogger, TFNTwitterScribe, TFNTwitterScribeFlush, TFNTwitterScribeImpressionLogger, TFNTwitterTeams, TFNTwitterUser, TFNTwitterUserDataSource, TFSAccountCredentials, TFSAccountFeatureSwitches, TFSModelContext, TFSPCFLabel, TFSTwitterAccountUserDetails, TFSTwitterCoreAPIConfiguration, TFSTwitterFeatureAccountScopedData, TFSTwitterLeaveBehindFeedbackManager, TFSTwitterSettings, TFSTwitterUserReference, TIPImagePipeline, TTSTypeaheadStore;
@protocol OS_dispatch_queue, TFNTwitterAccountPushSettingsProvider, TFNTwitterTimelineManagerProtocol, TFSAccountCredentialsSecretStore, TFSTwitterAPICommandContext, TFSTwitterAPICommandLoader, TFSTwitterAuthenticatedScribeDelegate, TFSTwitterCanonicalUser, TFSTwitterGeoDataProvider, TFSTwitterLegacyScribeLogMethods, TFSTwitterPromotableTrend, TFSTwitterPushSettingsManager, TPSFeatureSwitchesAccess, _TtP10TAPAccount21TAPAccountPerspective_;

@interface TFNTwitterAccount : NSObject
{
    NSMutableDictionary *_followCountUpdaters;
    NSMutableDictionary *_unfollowCountUpdaters;
    NSMutableArray *_savedSearches;
    NSArray *_followerRequests;
    unsigned long long _unreadFollowerRequestsCount;
    NSMutableSet *_followerRequestUserIDs;
    NSArray *_pendingTeamsInvitation;
    _Bool _refreshingFollowerRequests;
    double _lastFollowerRequestListRefresh;
    _Bool _refreshingTeamsInvitation;
    double _lastTeamInvitationtListRefresh;
    TFSAccountFeatureSwitches *_accountFeatureSwitches;
    id <TPSFeatureSwitchesAccess> _featureSwitches;
    CDStruct_977e3b8b _cardsPersistedStateOnceToken;
    TFCCardPersistedStateManager *_cardPersistedStateManager;
    struct {
        unsigned int lastGeotaggingState:1;
        unsigned int osNotificationsStateinitialized:1;
    } _flags;
    id _featureSwitchObserver;
    long long _userID;
    NSDate *_freshMentions;
    id <TFNTwitterTimelineManagerProtocol> _timelineManager;
    _Bool _hasAccountUser;
    TFNTwitterUserDataSource *_userDataSource;
    TFSTwitterSettings *_settings;
    double _lastSettingsRequestTime;
    NSMutableArray *_settingsResponseBlockQueue;
    TTSTypeaheadStore *_typeaheadStore;
    TFNTwitterCompositionPersistenceManager *_compositionPersistenceManager;
    CDStruct_977e3b8b _compositionPersistenceManagerOnceToken;
    _Bool _isActive;
    NSObject<OS_dispatch_queue> *_isActiveQueue;
    _Bool _autoRefreshAccountUser;
    TFNTwitterAccountModel *_model;
    NSMutableSet *_pendingFavorites;
    NSMapTable *_pendingRetweets;
    _Bool _loadedBasicInfo;
    _Bool _loadedDetailInfo;
    TCMCommunitiesContext *_communitiesContext;
    CDStruct_977e3b8b _communitiesContextToken;
    NSMutableSet *_pendingMutedConversations;
    NSMutableSet *_pendingConversationReplyPins;
    CDStruct_977e3b8b _timelineManagerToken;
    _Bool _verified;
    _Bool _isQuickPromoteEligible;
    _Bool _hasAdAccount;
    _Bool _scribeShouldSuspend;
    _Bool _everTweetedFromThisDevice;
    _Bool _hasAttemptedToSaveWebCredentials;
    _Bool _accountHasBeenRemoved;
    _Bool _composeGeoDefaultTooltipShownInitial;
    _Bool _composeDraftsTooltipHasBeenTapped;
    _Bool _videoCaptureTooltipShownFirstLaunched;
    _Bool _videoCaptureTooltipShownFirstOverrecord;
    _Bool _videoCaptureTooltipShownFirstSegmentPlayed;
    _Bool _videoCaptureTooltipShownFirstSegmentRecorded;
    _Bool _videoCaptureTooltipShownFirstVideoAvailable;
    _Bool _videoDockingDockButtonTooltipShownInitial;
    _Bool _videoDockingSwipeToDismissTooltipShownInitial;
    _Bool _processingBlockedIDs;
    int _backupCodeScreenshots;
    NSString *_accountID;
    NSString *_displayFullName;
    NSString *_displayUsername;
    id <TFSTwitterGeoDataProvider> _geoDataProvider;
    TFNTwitterCompositionOutboxController *_outboxController;
    TFSTwitterFeatureAccountScopedData *_accountScopedData;
    long long _identityType;
    NSString *_username;
    NSDate *_lastActiveDate;
    long long _lastScribeFlushId;
    NSDictionary *_lastSavedMutedKeywordConfiguration;
    id <TFNTwitterAccountPushSettingsProvider> _pushSettingsProvider;
    TFNTwitterLoginVerification *_loginVerification;
    TFNTwitterTeams *_teams;
    NSArray *_contributeeUserIDs;
    NSDate *_lastTweetedFromDevice;
    NSString *_lastDisplayedStatusIDWithActionsHint;
    TFSTwitterCoreAPIConfiguration *_coreAPIConfiguration;
    TFNTwitterScribe<TFSTwitterAuthenticatedScribeDelegate> *_tfnScribe;
    TFNTwitterPromotedEventLogger *_promotedEventLogger;
    NSString *_fullName;
    unsigned long long _lastReauthSuccessMachTime;
    NSMutableSet *_blockedIDs;
    id <TFSTwitterPromotableTrend> _lastImpressedPromotedTrend;
    NSDate *_accountCreationDate;
    NSDate *_credentialsVerificationLastUpdate;
    NSArray *_pickedInterests;
    unsigned long long _composeGeoDefaultTooltipNumberOfTimesShown;
    NSDate *_composeGeoDefaultTooltipLastPresentationTime;
    unsigned long long _composeGeoPhotoTooltipNumberOfTimesShown;
    NSDate *_composeGeoPhotoTooltipLastPresentationTime;
    TBCPeriscopeAccountManager *_periscopeAccountManager;
    NSDate *_lastBlockedIDsCheckDate;
    NSMutableSet *_lastPassBlockedIDs;
    TFNTwitterCachableVideoMonetizationSettings *_cachedMonetizationSettings;
    TFNTwitterHomeMutingSet *_homeMutingSet;
    id _vitModeEnabledToken;
    TFNTwitterScribeFlush *_scribeFlush;
    TFSTwitterAccountUserDetails *_accountUserDetails;
    id _accountUserDetailsObserver;
    TFSAccountCredentials *_credentials;
    id <TFSAccountCredentialsSecretStore> _credentialsStore;
    ADIAccountDependencyContainer *_dependencyContainer;
}

+ (id)accountIDFromInfoFilePath:(id)arg1;
+ (void)setCommunitiesContextProvider:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)communitiesContextProvider;
+ (id)verifiedOrganizationsParameterStrings;
+ (id)parameterStringForResourceFeature:(unsigned long long)arg1;
+ (unsigned long long)maxPasswordLength;
+ (unsigned long long)minPasswordLength;
+ (unsigned long long)maxUsernameLength;
+ (unsigned long long)maxFullNameLength;
+ (id)clientApplicationID;
+ (id)twitterFollowArticleURL;
+ (id)twitterRulesURL;
+ (CDUnknownBlockType)softUserGatePresentationBlock;
+ (void)setSoftUserGatePresentationBlock:(CDUnknownBlockType)arg1;
+ (id)sanitizeDrafts;
+ (id)sanitizeAccountDetails;
+ (id)sanitizeApplicationState;
+ (void)_tfs_apiInputInvalidWithDescription:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
+ (void)removeAuthTimelineToken;
+ (id)authTimelineToken;
+ (void)setAuthTimelineToken:(id)arg1;
+ (void)removeKnownDeviceTokenForTesting;
+ (id)knownDeviceToken;
+ (void)setKnownDeviceToken:(id)arg1;
+ (id)contributeeAccountWithContributee:(id)arg1 contributorAccount:(id)arg2;
+ (id)accountForPerspective:(id)arg1;
+ (long long)maximumConversationParticipantCount;
+ (double)typingIndicatorDuration;
+ (long long)shareSheetIndividualRecipientMaxCount;
- (void).cxx_destruct;
@property(readonly, nonatomic) ADIAccountDependencyContainer *dependencyContainer; // @synthesize dependencyContainer=_dependencyContainer;
@property(readonly, nonatomic) id <TFSAccountCredentialsSecretStore> credentialsStore; // @synthesize credentialsStore=_credentialsStore;
@property(readonly, nonatomic) TFSAccountCredentials *credentials; // @synthesize credentials=_credentials;
@property(retain, nonatomic) id accountUserDetailsObserver; // @synthesize accountUserDetailsObserver=_accountUserDetailsObserver;
@property(retain, nonatomic) TFSTwitterAccountUserDetails *accountUserDetails; // @synthesize accountUserDetails=_accountUserDetails;
@property(retain, nonatomic) TFNTwitterScribeFlush *scribeFlush; // @synthesize scribeFlush=_scribeFlush;
@property(retain, nonatomic) id vitModeEnabledToken; // @synthesize vitModeEnabledToken=_vitModeEnabledToken;
@property(retain, nonatomic) TFNTwitterHomeMutingSet *homeMutingSet; // @synthesize homeMutingSet=_homeMutingSet;
@property(retain, nonatomic) TFNTwitterCachableVideoMonetizationSettings *cachedMonetizationSettings; // @synthesize cachedMonetizationSettings=_cachedMonetizationSettings;
@property(retain, nonatomic) NSMutableSet *lastPassBlockedIDs; // @synthesize lastPassBlockedIDs=_lastPassBlockedIDs;
@property(retain, nonatomic) NSDate *lastBlockedIDsCheckDate; // @synthesize lastBlockedIDsCheckDate=_lastBlockedIDsCheckDate;
@property(nonatomic) _Bool processingBlockedIDs; // @synthesize processingBlockedIDs=_processingBlockedIDs;
@property(readonly, nonatomic) TBCPeriscopeAccountManager *periscopeAccountManager; // @synthesize periscopeAccountManager=_periscopeAccountManager;
@property(nonatomic) _Bool videoDockingSwipeToDismissTooltipShownInitial; // @synthesize videoDockingSwipeToDismissTooltipShownInitial=_videoDockingSwipeToDismissTooltipShownInitial;
@property(nonatomic) _Bool videoDockingDockButtonTooltipShownInitial; // @synthesize videoDockingDockButtonTooltipShownInitial=_videoDockingDockButtonTooltipShownInitial;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstVideoAvailable; // @synthesize videoCaptureTooltipShownFirstVideoAvailable=_videoCaptureTooltipShownFirstVideoAvailable;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstSegmentRecorded; // @synthesize videoCaptureTooltipShownFirstSegmentRecorded=_videoCaptureTooltipShownFirstSegmentRecorded;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstSegmentPlayed; // @synthesize videoCaptureTooltipShownFirstSegmentPlayed=_videoCaptureTooltipShownFirstSegmentPlayed;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstOverrecord; // @synthesize videoCaptureTooltipShownFirstOverrecord=_videoCaptureTooltipShownFirstOverrecord;
@property(nonatomic) _Bool videoCaptureTooltipShownFirstLaunched; // @synthesize videoCaptureTooltipShownFirstLaunched=_videoCaptureTooltipShownFirstLaunched;
@property(nonatomic) _Bool composeDraftsTooltipHasBeenTapped; // @synthesize composeDraftsTooltipHasBeenTapped=_composeDraftsTooltipHasBeenTapped;
@property(retain, nonatomic) NSDate *composeGeoPhotoTooltipLastPresentationTime; // @synthesize composeGeoPhotoTooltipLastPresentationTime=_composeGeoPhotoTooltipLastPresentationTime;
@property(nonatomic) unsigned long long composeGeoPhotoTooltipNumberOfTimesShown; // @synthesize composeGeoPhotoTooltipNumberOfTimesShown=_composeGeoPhotoTooltipNumberOfTimesShown;
@property(retain, nonatomic) NSDate *composeGeoDefaultTooltipLastPresentationTime; // @synthesize composeGeoDefaultTooltipLastPresentationTime=_composeGeoDefaultTooltipLastPresentationTime;
@property(nonatomic) unsigned long long composeGeoDefaultTooltipNumberOfTimesShown; // @synthesize composeGeoDefaultTooltipNumberOfTimesShown=_composeGeoDefaultTooltipNumberOfTimesShown;
@property(nonatomic) _Bool composeGeoDefaultTooltipShownInitial; // @synthesize composeGeoDefaultTooltipShownInitial=_composeGeoDefaultTooltipShownInitial;
@property(copy, nonatomic) NSArray *pickedInterests; // @synthesize pickedInterests=_pickedInterests;
@property(retain, nonatomic) NSDate *credentialsVerificationLastUpdate; // @synthesize credentialsVerificationLastUpdate=_credentialsVerificationLastUpdate;
@property(readonly, nonatomic) NSDate *accountCreationDate; // @synthesize accountCreationDate=_accountCreationDate;
@property(readonly, nonatomic) TFNTwitterAccountModel *model; // @synthesize model=_model;
@property(retain, nonatomic) id <TFSTwitterPromotableTrend> lastImpressedPromotedTrend; // @synthesize lastImpressedPromotedTrend=_lastImpressedPromotedTrend;
@property(readonly, nonatomic) NSMutableSet *blockedIDs; // @synthesize blockedIDs=_blockedIDs;
@property _Bool accountHasBeenRemoved; // @synthesize accountHasBeenRemoved=_accountHasBeenRemoved;
@property(nonatomic) unsigned long long lastReauthSuccessMachTime; // @synthesize lastReauthSuccessMachTime=_lastReauthSuccessMachTime;
@property(nonatomic) _Bool hasAttemptedToSaveWebCredentials; // @synthesize hasAttemptedToSaveWebCredentials=_hasAttemptedToSaveWebCredentials;
@property(readonly, copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(retain, nonatomic) TFNTwitterPromotedEventLogger *promotedEventLogger; // @synthesize promotedEventLogger=_promotedEventLogger;
@property(readonly, nonatomic) TFNTwitterScribe<TFSTwitterAuthenticatedScribeDelegate> *tfnScribe; // @synthesize tfnScribe=_tfnScribe;
@property(retain) TFSTwitterCoreAPIConfiguration *coreAPIConfiguration; // @synthesize coreAPIConfiguration=_coreAPIConfiguration;
@property(retain, nonatomic) NSString *lastDisplayedStatusIDWithActionsHint; // @synthesize lastDisplayedStatusIDWithActionsHint=_lastDisplayedStatusIDWithActionsHint;
@property(retain, nonatomic) NSDate *lastTweetedFromDevice; // @synthesize lastTweetedFromDevice=_lastTweetedFromDevice;
@property(nonatomic) _Bool everTweetedFromThisDevice; // @synthesize everTweetedFromThisDevice=_everTweetedFromThisDevice;
@property(copy, nonatomic) NSArray *contributeeUserIDs; // @synthesize contributeeUserIDs=_contributeeUserIDs;
@property(retain, nonatomic) TFNTwitterTeams *teams; // @synthesize teams=_teams;
@property(nonatomic) int backupCodeScreenshots; // @synthesize backupCodeScreenshots=_backupCodeScreenshots;
@property(readonly, nonatomic) TFNTwitterLoginVerification *loginVerification; // @synthesize loginVerification=_loginVerification;
@property(nonatomic) __weak id <TFNTwitterAccountPushSettingsProvider> pushSettingsProvider; // @synthesize pushSettingsProvider=_pushSettingsProvider;
@property(copy, nonatomic) NSDictionary *lastSavedMutedKeywordConfiguration; // @synthesize lastSavedMutedKeywordConfiguration=_lastSavedMutedKeywordConfiguration;
@property(nonatomic) _Bool scribeShouldSuspend; // @synthesize scribeShouldSuspend=_scribeShouldSuspend;
@property(nonatomic) long long lastScribeFlushId; // @synthesize lastScribeFlushId=_lastScribeFlushId;
@property(nonatomic) _Bool hasAdAccount; // @synthesize hasAdAccount=_hasAdAccount;
@property(nonatomic) _Bool isQuickPromoteEligible; // @synthesize isQuickPromoteEligible=_isQuickPromoteEligible;
@property(retain, nonatomic) NSDate *lastActiveDate; // @synthesize lastActiveDate=_lastActiveDate;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) long long identityType; // @synthesize identityType=_identityType;
@property(nonatomic) _Bool verified; // @synthesize verified=_verified;
@property(retain, nonatomic) TFSTwitterFeatureAccountScopedData *accountScopedData; // @synthesize accountScopedData=_accountScopedData;
@property(readonly, copy, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
@property(readonly, nonatomic) id <TFSTwitterAPICommandContext> tbc_apiCommandContext;
@property(readonly, nonatomic) id <TFSTwitterAPICommandLoader> tbc_apiCommandLoader;
- (id)_tfn_makeTypeaheadStoreWithDataModel:(id)arg1;
- (void)_tfn_configureAccountUserDetailsObserverIfNecessary;
- (id)_detailInfoDictionary;
- (void)_loadDetailInfoWithDictionary:(id)arg1;
- (void)_saveDetailInfoToDisk;
- (void)_tfn_loadDetailInfo;
- (void)deleteDetailInfoFile;
- (id)_basicInfoDictionary;
- (void)_loadBasicInfoWithDictionary:(id)arg1;
- (void)_saveBasicInfoToDisk;
- (void)_loadBasicInfo;
- (void)deleteBasicInfoFile;
- (id)_detailInfoFile;
- (id)_basicInfoFile;
- (void)saveInfo;
- (void)deleteInfoFiles;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_tfn_updateTeamsAccountsCredentials;
- (void)_tfn_applyActiveExperiments;
- (void)_notifyUnretweetForOriginalStatusID:(long long)arg1 retweetID:(long long)arg2;
- (void)_notifyRetweet:(long long)arg1 representedStatusID:(long long)arg2 fromUserID:(long long)arg3;
- (void)_notifyWithFavorite:(_Bool)arg1 statusID:(long long)arg2 fromUserID:(long long)arg3;
- (void)_postSettingsDidChangeNotificationWithOldSettings:(id)arg1 newSettings:(id)arg2;
- (void)_setUpModelDatabase;
@property(readonly, nonatomic) TCMCommunitiesContext *communitiesContext;
- (_Bool)isSubscribedToAnyPremiumTier;
@property(readonly, nonatomic) _Bool isVerifiedOrganizationAccount;
@property(readonly, nonatomic) _Bool isBusinessOrAffiliateAccount;
- (_Bool)isSubscribedToAtLeastOneResourceIdentifierIn:(id)arg1;
- (_Bool)isSubscribedTo:(unsigned long long)arg1;
- (_Bool)isVerifiedPremiumTierUser;
- (_Bool)isPremiumTierUser;
- (void)removeUserFromCache:(id)arg1;
- (void)removeStatusFromCacheWithStatusID:(long long)arg1;
- (id)definitiveUsers:(id)arg1;
- (id)definitiveStatus:(id)arg1;
- (id)definitiveUser:(id)arg1;
- (void)setCurrentAccountForBadgingWithCompletion:(CDUnknownBlockType)arg1;
- (void)unpinReplyWithStatusID:(long long)arg1 forConversationID:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pinReplyWithStatusID:(long long)arg1 forConversationID:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unhighlightTweetWithStatus:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)highlightTweetWithStatus:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getHighlightTweetSheet:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unhideTweetStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)hideTweetStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_loadMutingSet;
- (unsigned long long)mutedUsersCount;
- (void)private_updateUserWithUserReference:(id)arg1 muted:(_Bool)arg2 impressionID:(id)arg3 isEarned:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)unmuteUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)muteUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)updateUserMuteCachePolling:(_Bool)arg1;
- (_Bool)isMutingUser:(id)arg1;
- (void)unblockMessageUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)blockMessageUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)unblockUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)blockUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (_Bool)_removeStatusesFromUserID:(long long)arg1 reason:(unsigned long long)arg2;
- (void)_eradicateBlockedUserIDs:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_updateBlockedUsers:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_processBlockedIDsResponse:(id)arg1 monitoring:(id)arg2;
- (void)_didReceiveBlockingIDSuccess:(_Bool)arg1 object:(id)arg2 error:(id)arg3 monitoring:(id)arg4;
- (void)_refreshBlocksApplyingUpdatesCursor:(id)arg1 monitoring:(id)arg2;
- (void)_updateUnblockedUsers:(id)arg1;
- (void)refreshBlocks;
- (void)refreshBlocksApplyingUpdatesMonitoring:(id)arg1;
- (_Bool)blockedIDsNeedRefreshing;
- (_Bool)_refreshBlocksEnabled;
- (void)removeMentionedAccountUserFromStatus:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeTaggedAccountUserFromStatus:(id)arg1;
- (void)unretweetID:(long long)arg1 statusID:(long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)_updateStatesForRetweetStatus:(id)arg1 originalStatus:(id)arg2;
- (void)_handleRetweetFailure:(long long)arg1 error:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)retweetWithStatusID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)retweet:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)deleteStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)deleteStatus:(id)arg1;
- (void)dismissStatus:(id)arg1 withEvent:(long long)arg2 notify:(_Bool)arg3;
- (void)sendFeedbackForSuggestsInfo:(id)arg1 feedbackType:(id)arg2 undo:(_Bool)arg3;
- (void)sendFeedbackForUserSuggestsInfo:(id)arg1 feedbackType:(id)arg2 userIDNumbers:(id)arg3 undo:(_Bool)arg4;
- (void)sendFeedbackForSuggestsInfo:(id)arg1 feedbackType:(id)arg2 statusIDNumbers:(id)arg3 undo:(_Bool)arg4;
- (void)_unfavoriteStatusWithStatusID:(long long)arg1 fromUserID:(long long)arg2 isEarnedImpression:(_Bool)arg3 impressionID:(id)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)unfavoriteStatusWithStatusID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)unfavoriteStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_favoriteStatusWithStatusID:(long long)arg1 representedStatusID:(id)arg2 fromUserID:(long long)arg3 isEarnedImpression:(_Bool)arg4 impressionID:(id)arg5 responseBlock:(CDUnknownBlockType)arg6;
- (void)favoriteStatusWithStatusID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)favoriteStatus:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)_fetchRemoteStatusWithID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)fetchStatusWithID:(long long)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)lookUpStatusForQuotedStatusInfo:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)lookUpStatusForID:(long long)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_fetchRemoteUserWithUsername:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)_fetchRemoteUserWithID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)fetchUserWithUserReference:(id)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (id)_tfn_fetchUserWithUsername:(id)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (id)fetchUserWithID:(long long)arg1 source:(unsigned long long)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)lookUpUserForUserReference:(id)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)lookUpUserForUsername:(id)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)lookUpUserForID:(long long)arg1 source:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_refreshMyUserForce:(_Bool)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)_coreAPIConfiguration;
- (void)_tfn_accountUserDetailsUpdated:(id)arg1;
- (void)_userDataSourceDidUpdate:(id)arg1;
- (void)_tfn_removeStatusIDFromStreams:(id)arg1 reason:(unsigned long long)arg2 relatedToUserID:(id)arg3;
- (_Bool)isAuthorOfQuotedStatusInfo:(id)arg1;
- (_Bool)isAuthorOfStatus:(id)arg1;
- (_Bool)myUserIsEqualToUsername:(id)arg1;
- (_Bool)myUserIsEqualToUserID:(long long)arg1;
- (_Bool)myUserIsEqualToUserDataSource:(id)arg1;
- (_Bool)myUserIsEqualToUserReference:(id)arg1;
- (_Bool)myUserIsEqualToUser:(id)arg1;
@property(readonly, nonatomic) TBCPeriscopeAccount *periscopeAccount;
- (id)actionService;
@property(readonly, nonatomic) TFSModelContext *modelContext;
- (void)flushScribe;
- (void)updateSettings:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateCurrentPassword:(id)arg1 updatedPassword:(id)arg2 passwordConfirmation:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)updateSettingsWithBlock:(CDUnknownBlockType)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)fetchMonetizationSetting:(CDUnknownBlockType)arg1;
- (void)markSettingsDirty;
- (void)getSettingsMaxStale:(double)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)getSettings:(CDUnknownBlockType)arg1;
- (void)overrideSettings:(id)arg1;
- (void)refreshUserTypeaheadStoreCacheIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)refreshHomeTimelineForComposition:(id)arg1;
- (void)refreshForced:(_Bool)arg1 source:(unsigned long long)arg2;
- (void)_tfn_refreshTimelinesWithSource:(long long)arg1;
- (void)refreshMyUserImmediatelyWithCompletion:(CDUnknownBlockType)arg1;
- (void)refreshMyUserIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)saveLoginVerificationToKeychainFromUserDefaultsIfNecessary;
@property(readonly, nonatomic) int loginVerificationMode;
@property(readonly, nonatomic) _Bool isLoginVerificationEnabled;
- (id)autosaveName;
- (id)accountScopedFeatureForIdentifier:(id)arg1;
- (void)updateUserInfoAndCredentialsWithToken:(id)arg1 secret:(id)arg2 username:(id)arg3;
- (id)deleteOAuthCredentialsInKeychain;
@property(readonly, nonatomic) id <TFNTwitterTimelineManagerProtocol> timelineManagerProtocol;
- (id)timelineManagerProvider;
- (void)setOAuthTokenForTeamsAccount:(id)arg1 withOAuthTokenSecret:(id)arg2;
- (void)resetOAuthCredentials;
@property(readonly, copy, nonatomic) NSString *oAuthConsumerSecret;
@property(readonly, copy, nonatomic) NSString *oAuthConsumerKey;
@property(readonly, nonatomic) _Bool hasOAuthTokens;
@property(readonly, nonatomic) TFSTwitterLeaveBehindFeedbackManager *leaveBehindFeedbackManager;
@property(readonly, nonatomic) TAFDynamicVideoAdManager *dynamicVideoAdManager;
- (void)updateScribeOptions;
- (id)_scribeOptionsFromDictionary:(id)arg1;
- (id)_scribeOptions;
@property(nonatomic) _Bool osNotificationsInitialized;
@property(readonly, nonatomic) TTSTypeaheadStore *typeaheadStore;
@property(readonly, nonatomic) TFNTwitterCompositionPersistenceManager *compositionPersistenceManager;
@property(readonly, nonatomic) TFNTwitterCompositionOutboxController *outboxController; // @synthesize outboxController=_outboxController;
@property(readonly, nonatomic) TFNTwitterScribeImpressionLogger *impressionLogger;
@property(readonly, nonatomic) id <TFSTwitterLegacyScribeLogMethods> scribe;
@property(nonatomic) _Bool lastGeotaggingState;
@property(readonly, nonatomic, getter=isUsingRetainedGeoDataForCreatingTweetAllowed) _Bool usingRetainedGeoDataForCreatingTweetAllowed;
@property(readonly, nonatomic) id <TFSTwitterGeoDataProvider> geoDataProvider; // @synthesize geoDataProvider=_geoDataProvider;
@property(retain, nonatomic) TFSTwitterSettings *settings;
@property(readonly, nonatomic) NSArray *subscriptionProductFeatures;
@property(readonly, nonatomic) _Bool isSoftUser;
@property(readonly, nonatomic) long long userType;
@property(readonly, nonatomic) NSArray *subscriptionClaims;
@property(readonly, nonatomic, getter=isSuperFollowSubscriber) _Bool superFollowSubscriber;
@property(readonly, nonatomic, getter=isBlueVerified) _Bool blueVerified;
@property(readonly, nonatomic, getter=isSuspended) _Bool suspended;
@property(readonly, nonatomic) TFSPCFLabel *parodyCommentaryFanLabel;
@property(readonly, nonatomic) _Bool hasParodyProfileLabel;
@property(readonly, nonatomic) _Bool hasGraduatedAccess;
@property(readonly, nonatomic) _Bool isActiveCreator;
@property(readonly, nonatomic) unsigned long long superFollowersCount;
@property(readonly, nonatomic) id <TFSTwitterPushSettingsManager> pushSettings;
@property(readonly, copy, nonatomic) NSString *displayFullName; // @synthesize displayFullName=_displayFullName;
@property(readonly, copy, nonatomic) NSString *displayUsername; // @synthesize displayUsername=_displayUsername;
@property(readonly, copy, nonatomic) TFSTwitterUserReference *userReference;
@property(readonly, nonatomic) TFNTwitterUser *legacyUser;
@property(readonly, nonatomic) id <TFSTwitterCanonicalUser> user;
@property(readonly, nonatomic) TFNTwitterUserDataSource *userDataSource;
- (void)_initUserDataSource;
@property(readonly, nonatomic) long long userID;
@property _Bool isActive;
- (void)_tfn_isActive_guaranteePreWarmedMainThreadOperation;
- (void)_tfn_isInactive_cleanup;
- (void)_tfn_isActive_mainThreadOperation;
- (void)loadDetailInformationIfNeeded;
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) NSString *oAuthTokenSecret;
@property(copy, nonatomic) NSString *oAuthToken;
- (void)_saveOAuthTokenSecretWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)saveOAuthCredentialWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)saveOAuthTokenSecretToKeychainIfNecessary;
- (id)userDefaultsDictionaryValueForGroupUserDefaults:(_Bool)arg1;
- (id)initWithUserDefaultsDictionary:(id)arg1;
- (id)initWithJSONString:(id)arg1;
- (void)releaseTimelines;
- (void)updateWithAccount:(id)arg1;
- (void)dealloc;
- (id)initTestAccountWithUser:(id)arg1 accountUserDetails:(id)arg2 autoRefreshAccountUser:(_Bool)arg3;
- (id)initTestAccountWithUser:(id)arg1 autoRefreshAccountUser:(_Bool)arg2;
- (id)initTestAccountWithUser:(id)arg1;
- (id)initTestAccountWithUsername:(id)arg1 userID:(long long)arg2 autoRefreshAccountUser:(_Bool)arg3;
- (id)initTestAccountWithUsername:(id)arg1 userID:(long long)arg2;
- (id)initTestAccountWithUsername:(id)arg1;
- (id)initWithAccountID:(id)arg1 username:(id)arg2 userID:(long long)arg3 fullName:(id)arg4 verified:(_Bool)arg5 identityType:(long long)arg6 accountCreationDate:(id)arg7 accountUserDetails:(id)arg8;
- (id)initWithUsername:(id)arg1 userID:(long long)arg2 fullName:(id)arg3 verified:(_Bool)arg4 identityType:(long long)arg5 accountCreationDate:(id)arg6 accountUserDetails:(id)arg7;
- (id)initWithUsername:(id)arg1 userID:(long long)arg2;
- (id)init;
@property(readonly, nonatomic) _Bool isIDFASystemPromptKillSwitchEnabled;
@property(readonly, nonatomic) NSArray *advertiserAccountServiceLevels;
@property(readonly, nonatomic) long long advertiserAccountType;
- (id)_tfn_baseSignedMutableURLRequest:(id)arg1 parameters:(id)arg2;
- (id)authenticatedMutableURLRequestForURLRequest:(id)arg1 parameters:(id)arg2 error:(id *)arg3;
- (void)warmCardPersistedStateManager;
@property(readonly, nonatomic) TFCCardPersistedStateManager *cardPersistedStateManager;
- (void)private_updateConversationMutingForStatus:(id)arg1 mute:(_Bool)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)unmuteConversation:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)muteConversation:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)japanLaborThanksGivingDayMessage;
- (_Bool)isJapanHolidaysLaborThanksGivingDayEnabled;
- (id)japanLaborThanksGivingDayTriggers;
- (double)flushScribeRecurringTaskInterval;
- (_Bool)isArticlesConsumptionEnabled;
- (_Bool)isArticlesAPIEnabled;
- (_Bool)isGlobalPrivateLikesEnabled;
- (_Bool)isRestorePurchasesEnabled;
- (_Bool)isCreatorSubscriptionsPollingGenericEnabled;
- (_Bool)isCreatorSubscriptionsPollingAfterPurchaseEnabled;
- (_Bool)isCreatorSubscriptionsConnectTabEnabled;
- (_Bool)isCreatorSubscriptionsEmailShareEnabled;
- (_Bool)isCreatorSubscriptionsCountEnabled;
- (_Bool)isDeviceFollowWithoutFollowEnabled;
- (_Bool)isRepliesAndMentionsNotificationsEnabled;
- (_Bool)isDeviceFollowNotificationsMultiSelectEnabled;
- (id)profileTipJarSettingsEnabledServices;
- (_Bool)isProfileTipJarSettingsEnabled;
- (_Bool)isProfileTipJarEnabled;
- (_Bool)isTweetPromoteButtonInFocalTopAnalyticsEnabled;
- (_Bool)isTweetPromoteButtonAuthorLabelEnabled;
- (_Bool)isTweetPromoteButtonInTweetAnalyticsEnabled;
- (_Bool)isTweetPromoteButtonInFocalBottomToolbarEnabled;
- (_Bool)isTweetPromoteButtonInFocalTopToolbarEnabled;
- (_Bool)isTweetPromoteButtonInOverflowMenuEnabled;
- (_Bool)isTweetPromoteButtonComposerBottomPlacementEnabled;
- (_Bool)isTweetPromoteButtonInComposerUnverifiedEnabled;
- (_Bool)isTweetPromoteButtonInTweetComposerEnabled;
- (_Bool)isTweetPromoteButtonLocationEntryEnabled;
- (_Bool)isTweetPromoteButtonKeywordEntryEnabled;
- (_Bool)isTweetPromoteButtonAPIEnabled;
- (_Bool)isTweetPromoteButtonEnabled;
- (_Bool)isDockedUploadControlBarEnabled;
- (_Bool)isProfessionalProfileEnabled;
- (id)legacyClientEventDenyList;
- (unsigned long long)fetchBackstopPromptSoftLaunchDelayCount;
- (_Bool)shouldDisplayBackstopPrepromptAfterImpressingTheUser;
- (long long)delayBackstopPromptBucketType;
- (long long)_peekDelayBackstopPromptBucketType;
- (long long)_delayBackstopPromptBucketTypeFor:(id)arg1;
- (_Bool)isLivePipelineEventsScribeEnabled;
- (_Bool)_isVITModeEnabled;
- (_Bool)isDMConvoUpdateNameUsingGraphQLEnabled;
- (_Bool)isConversationControlVerifiedEnabled;
- (_Bool)isConversationControlMySubscribersEnabled;
- (_Bool)isConversationControlPersistenceEnabled;
- (_Bool)isConversationControlChangeTooltipEnabled;
- (_Bool)isConversationControlChangeEnabled;
- (long long)pushNotificationRateLimitMaxEvents;
- (long long)pushNotificationRateLimitMaxEventsPerInterval;
- (long long)pushNotificationRateLimitInterval;
- (id)countrySettingCodesAllowList;
- (_Bool)shouldUseChangePasswordEndpoint;
- (_Bool)shouldRunFeatureSwitchesAATest;
- (id)perftownEventAllowList;
- (_Bool)isPerftownEnabled;
- (_Bool)isStackTraceForPromotedEventErrorsEnabled;
- (double)intervalMultiplierForLoginChallengePolling;
- (long long)pollingIntervalForLoginChallenge;
- (long long)followersCountForTitleMinimum;
- (long long)followersCountForTitleEnabled;
- (_Bool)isVitVerifiedFollowersViewEnabled;
- (_Bool)isVitScopedNotificationsEnabled;
- (_Bool)isVitNotificationFilteringEnabled;
- (void)partiallyApplyPendingFeatureSwitches;
- (void)_tfn_initializeFeatureSwitchObserver;
- (void)_tfn_initializeCoreAPIConfiguration;
@property(readonly, nonatomic) id <TPSFeatureSwitchesAccess> featureSwitches;
@property(readonly, nonatomic) TFSAccountFeatureSwitches *accountFeatureSwitches;
- (void)markAllFollowerRequestsAsRead;
- (void)_tfn_setNeedsFollowerRequestsRefresh;
- (_Bool)hasFollowerRequestFromUserWithUserID:(long long)arg1;
- (void)denyFollowerRequestFromUserWithUserReference:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_tfn_removeFollowerRequest:(id)arg1;
- (void)acceptFollowerRequestFromUserWithUserReference:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_tfn_fetchFollowerIDsWithCursor:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)unreadFollowerRequestsCountForceRefresh:(_Bool)arg1;
- (id)followerRequestsForceRefresh:(_Bool)arg1;
- (void)_sendUnfollowAllRequestForUsers:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)unfollowUsers:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)_updaterKeyForUsersWithIDs:(id)arg1;
- (id)_followCountUpdatersForFollowing:(_Bool)arg1;
- (void)_handleBulkFollowCountsForCompletionOfRequestToUsersWithIDs:(id)arg1 forFollowing:(_Bool)arg2 success:(_Bool)arg3;
- (void)_handleFollowCountsForCompletionOfRequestToUserWithID:(id)arg1 forFollowing:(_Bool)arg2 success:(_Bool)arg3;
- (void)_handleFollowCountsForStartOfRequestToUsersWithIDs:(id)arg1 forFollowing:(_Bool)arg2;
- (void)_handleFollowCountsStartOfRequestToUserWithID:(id)arg1 forFollowing:(_Bool)arg2;
- (void)_expireExtendedProfilesForUsersWithIDs:(id)arg1;
- (void)_expireExtendedProfilesForUserID:(id)arg1;
- (void)liveUnfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)deviceUnfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)unfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 associatedStatus:(id)arg4 context:(long long)arg5 responseBlock:(CDUnknownBlockType)arg6;
- (void)unfollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 associatedStatusForLeaveBehindConfirmation:(id)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)_sendFollowAllRequestForUsers:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)followUsers:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_sendFollowRequest:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_followUser:(id)arg1 withFollowRequest:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)followUserWithFollowRequest:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)liveFollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 supportsChallenges:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)deviceFollowUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 supportsChallenges:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)followUserWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 supportsChallenges:(_Bool)arg4 responseBlock:(CDUnknownBlockType)arg5;
- (void)cancelFollowRequestWithUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)enableRetweetsForUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)disableRetweetsForUserReference:(id)arg1 impressionID:(id)arg2 isEarned:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)lookupFullRelationshipForUserID:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)_lookupRelationshipsForUsersWithIDs:(id)arg1 usersWithUsernames:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)lookupRelationshipsForUsers:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateVideoExportQuality:(long long)arg1 videoImport:(id)arg2;
- (id)twitterMediaAssetVideoImportWithPhotoAsset:(id)arg1 stripAudioTrack:(_Bool)arg2 videoExportQuality:(long long)arg3;
- (_Bool)shouldRemoveDisabledTracks;
- (id)tavTranscoderConfigurationForExportMode:(long long)arg1;
- (struct CGSize)tavQualityFallbackResolutionForExportMode:(long long)arg1;
- (double)tavQualityFallbackBitrateFraction;
- (id)tavQualityLevel;
- (long long)tavGpuFilterNumberOfFramesToBuffer;
- (_Bool)tavGpuDownscalingEnabled;
- (long long)tavDecoderDownscalerMode;
- (long long)tavAudioBitRate;
- (double)tavAudioSampleRate;
- (_Bool)tavVideoEncodeOpenGOP;
- (double)tavVideoKeyFrameIntervalDuration;
- (long long)tavVideoKeyFrameInterval;
- (id)tavVideoCodec;
- (_Bool)passthroughOnTransmuxEnabled;
- (_Bool)tavTranscoderEnabled;
- (double)maximumOutputBitrateForMode:(long long)arg1;
@property(readonly, nonatomic, getter=isGrokEditWithGrokButtonUnderPostIncludeGrokImageAnnotationInGraphqlKey) _Bool isGrokEditWithGrokButtonUnderPostIncludeGrokImageAnnotationInGraphqlKey;
@property(readonly, nonatomic, getter=isGrokEditWithGrokButtonUnderPostFocalEnabled) _Bool isGrokEditWithGrokButtonUnderPostFocalEnabled;
@property(readonly, nonatomic, getter=isGrokEditWithGrokButtonUnderPostPreviewEnabled) _Bool isGrokEditWithGrokButtonUnderPostPreviewEnabled;
@property(readonly, nonatomic, getter=isGrokAskGrokButtonUnderPostFocalEnabled) _Bool isGrokAskGrokButtonUnderPostFocalEnabled;
@property(readonly, nonatomic, getter=isGrokAskGrokButtonUnderPostPreviewEnabled) _Bool isGrokAskGrokButtonUnderPostPreviewEnabled;
@property(readonly, nonatomic, getter=isMediaUpload4kEnabled) _Bool mediaUpload4kEnabled;
@property(readonly, nonatomic, getter=isMediaUpload1080pVideoSubscriptionBypassEnabled) _Bool mediaUpload1080pVideoSubscriptionBypassEnabled;
@property(readonly, nonatomic, getter=isProfileImageUploadHashingEnabled) _Bool profileImageUploadHashingEnabled;
@property(readonly, nonatomic, getter=isMediaUploadHashingEnabled) _Bool mediaUploadHashingEnabled;
@property(readonly, nonatomic, getter=isDmPerformanceMediaLoggingEnabled) _Bool dmPerformanceMediaLoggingEnabled;
@property(readonly, nonatomic, getter=isMediaUploadAllPerformanceLoggingEnabled) _Bool mediaUploadAllPerformanceLoggingEnabled;
@property(readonly, nonatomic, getter=isMediaUploadLocalTweetVideoPerformanceLoggingEnabled) _Bool mediaUploadLocalTweetVideoPerformanceLoggingEnabled;
@property(readonly, nonatomic) long long continueWatchingGraphQLPersistPollingSeconds;
@property(readonly, nonatomic) long long continueWatchingPersistAfterProgressSeconds;
@property(readonly, nonatomic) long long continueWatchingPersistMinimumDurationSeconds;
@property(readonly, nonatomic, getter=isContinueWatchingConsumeGraphQLEnabled) _Bool continueWatchingConsumeGraphQLEnabled;
@property(readonly, nonatomic, getter=isContinueWatchingFreePersistGraphQLEnabled) _Bool continueWatchingFreePersistGraphQLEnabled;
@property(readonly, nonatomic, getter=isContinueWatchingPremiumPersistGraphQLEnabled) _Bool continueWatchingPremiumPersistGraphQLEnabled;
@property(readonly, nonatomic, getter=isContinueWatchingFreePersistLocallyEnabled) _Bool continueWatchingFreePersistLocallyEnabled;
@property(readonly, nonatomic, getter=isContinueWatchingPremiumPersistLocallyEnabled) _Bool continueWatchingPremiumPersistLocallyEnabled;
@property(readonly, nonatomic, getter=isContinueWatchingEnabled) _Bool continueWatchingEnabled;
@property(readonly, nonatomic, getter=isMediaDownloadVideoMetadataBypassEnabled) _Bool mediaDownloadVideoMetadataBypassEnabled;
@property(readonly, nonatomic, getter=isMediaDownloadVideoEnabled) _Bool mediaDownloadVideoEnabled;
@property(readonly, nonatomic, getter=isMediaDownloadVideoPromptEnabled) _Bool mediaDownloadVideoPromptEnabled;
@property(readonly, nonatomic, getter=isMediaAllowDownloadSettingAvailable) _Bool mediaAllowDownloadSettingAvailable;
@property(readonly, nonatomic) _Bool isMaxUploadOnWifiOrCellularByDefaultEnabled;
@property(readonly, nonatomic) _Bool ecdDisputeFormLinkEnabled;
@property(readonly, nonatomic) _Bool mediaAsyncUploadSendTotalBytesInFinalize;
@property(readonly, nonatomic) long long mediaAsyncUploadNumberOfHTTPRequestsToPack;
@property(readonly, nonatomic) unsigned long long mediaAsyncUploadMaxGifSizeInMBs;
@property(readonly, nonatomic) double mediaAsyncUploadAmplifyThreshold;
@property(readonly, nonatomic) unsigned long long photoUploadMaxRetryCount;
@property(readonly, nonatomic) long long photoUploadHighQualityImagesUploadDefaultResolution;
@property(readonly, nonatomic) _Bool photoUploadHighQualityImagesSettingIsVisible;
@property(readonly, nonatomic) long long photoLosslessCompressionMaximumResolution;
@property(readonly, nonatomic) long long photoLowBandwidthUploadDimension;
@property(readonly, nonatomic) long long photoMediumBandwidthUploadDimension;
@property(readonly, nonatomic) long long photoHighBandwidthUploadDimension;
@property(readonly, nonatomic) _Bool isFlowLoggerEnabled;
@property(readonly, nonatomic) long long mediaUploadGroupPolicy;
@property(readonly, nonatomic) long long videosSegmentedUploadMaxiumRetryPerRequest;
@property(readonly, nonatomic) long long videosSegmentedUploadMinimumSegmentSize;
@property(readonly, nonatomic) long long videosSegmentedUploadSegmentSizeForPoorNetwork;
@property(readonly, nonatomic) long long videosSegmentedUploadSegmentSizeForGoodNetwork;
@property(readonly, nonatomic) long long videosSegmentedUploadSegmentSizeForGreatNetwork;
@property(readonly, nonatomic, getter=isVideosSegmentedUploadSegmentSizeBackoffPolicyEnabled) _Bool videosSegmentedUploadSegmentSizeBackoffPolicyEnabled;
@property(readonly, nonatomic) long long photosSegmentedUploadMaxiumRetryPerRequest;
@property(readonly, nonatomic) long long photosSegmentedUploadMinimumSegmentSize;
@property(readonly, nonatomic) long long photosSegmentedUploadSegmentSizeForGreatNetwork;
@property(readonly, nonatomic) long long photosSegmentedUploadSegmentSizeForGoodNetwork;
@property(readonly, nonatomic) long long photosSegmentedUploadSegmentSizeForPoorNetwork;
@property(readonly, nonatomic, getter=isPhotosSegmentedUploadSegmentSizeBackoffPolicyEnabled) _Bool photosSegmentedUploadSegmentSizeBackoffPolicyEnabled;
@property(readonly, nonatomic) TIPImagePipeline *imagePipeline;
- (_Bool)isOnboardingEnterUsernameSubmitCurrentEnabled;
- (_Bool)isOnboardingEnterUsernameHiddenSkipEnabled;
- (_Bool)isOnboardingEnterUsernameHiddenPrefillEnabled;
- (_Bool)isZippyJSONEnabled;
- (_Bool)isRecurringTaskServiceActiveAccountForPushBadgingTriggerOnRegistrationEnabled;
- (_Bool)isRecurringTaskServiceActiveAccountReloadTypeaheadUserCacheTriggerOnRegistrationEnabled;
- (_Bool)isRecurringTaskServiceActiveAccountFlushPromotedEventsTriggerOnRegistrationEnabled;
- (_Bool)isRecurringTaskServiceInactiveAccountsAvatarRefreshTriggerOnRegistrationEnabled;
- (_Bool)isRecurringTaskServiceInactiveAccountsUserRefreshTriggerOnRegistrationEnabled;
- (_Bool)isRecurringTaskServiceActiveAccountUserRefreshTriggerOnRegistrationEnabled;
- (_Bool)isRecurringTaskServiceActiveAccountGetSettingsTriggerOnRegistrationEnabled;
- (void)unpinTweetWithID:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)pinTweetWithStatusID:(id)arg1 fromUserID:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)removeBannerImageWithResponseBlock:(CDUnknownBlockType)arg1;
- (void)logPromotedEventIfNeeded:(long long)arg1 onTrend:(id)arg2;
- (void)_getTOTPKeyRemote:(CDUnknownBlockType)arg1;
- (void)updateTOTPKey;
- (void)qrLoginSubmitWithQRCode:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)qrLoginValidateWithQRCode:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateLoginVerificationFromKeychain;
- (void)_makeNewOnlineCode:(CDUnknownBlockType)arg1;
- (_Bool)_makeNewOfflineCode;
- (void)makeNewBackupCode:(CDUnknownBlockType)arg1;
- (void)_currentOnlineCode:(CDUnknownBlockType)arg1;
- (id)_currentOfflineCode;
- (void)currentBackupCode:(CDUnknownBlockType)arg1;
- (_Bool)validateLegacyPushKeyIfNecessary;
- (id)signLoginVerificationChallenge:(id)arg1;
- (void)unregisterDeviceForLoginVerification:(CDUnknownBlockType)arg1 useInRequestOAuth:(_Bool)arg2;
- (void)_unenroll:(CDUnknownBlockType)arg1;
- (int)_modeForEnrollmentStringValue:(id)arg1;
- (void)checkForLoginVerification:(CDUnknownBlockType)arg1;
- (void)updateTwoFactorAuthStatusFromServerUsingNewEndpoint:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)registerForPushLoginVerification:(CDUnknownBlockType)arg1;
- (void)_delLoginVerificationStatus;
- (void)updateSettingsSharingAudioSpacesListeningDataWithFollowers:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsMarkMediaAsSensitiveEnabled:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsPasswordResetProtectEnabled:(_Bool)arg1 password:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsPersonalizedTrendsEnabled:(_Bool)arg1 location:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsSharingDataWithPartnersPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsLocationHistoryPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsLoggedOutDevicesPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsCookiesPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAdsPersonalization:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsMentionFilter:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsUniversalQualityFilter:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowAutomatedMute:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowAbuseFiltering:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsCountryCode:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAllowMediaTagging:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAccountProtection:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAcceptDirectMessagesFrom:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmHasAVCallsEnabled:(_Bool)arg1 dmAcceptsAVCallsFrom:(long long)arg2 dmHasEnhancedCallPrivacyEnabled:(_Bool)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)updateSettingsDmHasEnhancedCallPrivacyEnabled:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmAcceptsAVCallsFrom:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmHasAVCallsEnabled:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsAlwaysAllowMessagesFromSubscribers:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmLowQualityFilter:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDmReadReceipts:(long long)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsScreenName:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsPassword:(id)arg1 passwordConfirmation:(id)arg2 currentPassword:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;
- (void)updateSettingsPassword:(id)arg1 currentPassword:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsEmail:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsEmail:(id)arg1 password:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)updateSettingsDiscoverableByPhone:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)updateSettingsDiscoverableByEmail:(_Bool)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (_Bool)isUploadLiveActivityEnabled;
- (_Bool)preferToCancelOnBackgroundTaskExpiration;
- (_Bool)isTweetOutboxIgnoreNetworkReachabilityEnabled;
- (void)_removeResolvedTeamsInvitationFromUserID:(long long)arg1;
- (void)denyTeamsInvitationFromUserID:(long long)arg1;
- (void)acceptTeamsInvitationFromUserID:(long long)arg1;
- (void)_fetchTeamsInvitationWithCursorWithResponseBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)pendingTeamsInvitationCountForceRefresh:(_Bool)arg1;
- (id)pendingTeamsInvitationForceRefresh:(_Bool)arg1;
- (_Bool)hasContributee;
- (_Bool)isDisabledForTeamsAccount;
- (id)headerContributorVersionForDelegationGroups;
- (id)headerStringForDelegationGroups;
- (_Bool)isAccountSettingsAccessible;
- (_Bool)canQuitTeam;
- (_Bool)canManageTeam;
- (_Bool)isProfileAccessible;
- (_Bool)isDelegateAccount;
- (_Bool)isOwner;
- (_Bool)isAdministrator;
- (_Bool)isContributor;
- (void)updateTimesShownUserMuteConfirmationAlert;
- (_Bool)shouldDisplayUserMuteConfirmationAlert;
@property(readonly, nonatomic) id <_TtP10TAPAccount21TAPAccountPerspective_> perspective;
@property(readonly, nonatomic) _Bool isNarrowcastPostCreationEnabled;
@property(readonly, nonatomic) _Bool isArticlePreviewEnabled;
@property(readonly, nonatomic) _Bool isArticleRestAPIEnabled;
@property(readonly, nonatomic) _Bool isViewCountsAPIEnabled;
@property(readonly, nonatomic) _Bool isHasSpacesCallEnabled;
@property(readonly, nonatomic) _Bool isDontMentionMeAPIEnabled;
@property(readonly, nonatomic) _Bool isSuperFollowsTweetCreationEnabled;
@property(readonly, nonatomic) _Bool isSafetyModeEnabled;
@property(readonly, nonatomic) _Bool isBirdwatchPivotEnabled;
@property(readonly, nonatomic) _Bool isBirdwatchConsumptionEnabled;
@property(readonly, nonatomic) long long scribeAPIErrorSampleSize;
@property(readonly, nonatomic) long long scribeAPISampleSize;
- (id)reactionsConfiguration;
- (void)resetReactionsConfiguration;
- (id)fetchFreshConfiguration;
@property(nonatomic, readonly) _Bool isDMExpandedInfoAvailable;
@property(nonatomic, readonly) long long directMessageMaxGroupSize;
@property(nonatomic, readonly) double typingIndicatorDuration;
@property(nonatomic, readonly) double inboxPollingInterval;
@property(nonatomic, readonly) double conversationPollingInterval;
@property(nonatomic, readonly) _Bool isJapanSafetyDialogEnabled;
@property(nonatomic, readonly) _Bool is2022H1IncrementalHoldbackEnabled;
@property(nonatomic, readonly) long long dmShareSheetMaxIndividualRecipients;
@property(nonatomic, readonly) _Bool isDMConversationComposePrioritizeRecentsEnabled;
@property(nonatomic, readonly) _Bool isDMConversationComposeCreateGroupEnabled;
@property(nonatomic, readonly) _Bool isDMAllowMessageRequestsPromptEnabled;
- (unsigned long long)unseenUntrustedDMCountForBadging;
- (unsigned long long)unseenDMCountForBadging;
@property(nonatomic, readonly) TFNDirectMessageService *directMessages;
- (_Bool)canViewTweetAnalyticsForViewModel:(id)arg1;

// Remaining properties
@property(readonly) Class superclass;

@end

