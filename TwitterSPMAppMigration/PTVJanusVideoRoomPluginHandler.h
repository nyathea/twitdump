//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSString, NSTimer, PTVAudioMonitor, PTVGuestRoomConfiguration, PTVWeakSet, PTVWebRTCMediaStream, RTCAudioTrack, RTCIceServer, RTCPeerConnection, RTCPeerConnectionFactory, RTCSessionDescription, RTCVideoTrack;
@protocol OS_dispatch_queue, PTVJanusVideoRoomPluginHandlerDelegate;

@interface PTVJanusVideoRoomPluginHandler : NSObject
{
    PTVJanusVideoRoomPluginHandler *_weakSelf;
    PTVWeakSet *_observers;
    _Bool _hasJoinedRoom;
    unsigned long long _janusSessionId;
    NSString *_adminUserId;
    unsigned long long _privateId;
    RTCIceServer *_iceServer;
    RTCPeerConnectionFactory *_peerConnectionFactory;
    NSString *_offerSdp;
    RTCVideoTrack *_localVideoTrack;
    RTCAudioTrack *_localAudioTrack;
    NSObject<OS_dispatch_queue> *_collectStatsQueue;
    NSMutableArray *_collectStatsCompletionHandlers;
    _Bool _isAudioOnly;
    _Bool _isRestartingICE;
    _Bool _hasTimedOutSubscribe;
    unsigned long long _handlerId;
    unsigned long long _role;
    NSString *_userId;
    unsigned long long _listenerFeedId;
    NSArray *_streams;
    PTVWebRTCMediaStream *_remoteMediaStream;
    unsigned long long _publisherId;
    NSTimer *_subscribeTimer;
    PTVAudioMonitor *_localAudioMonitor;
    id <PTVJanusVideoRoomPluginHandlerDelegate> _delegate;
    NSString *_userIdForJanusAuth;
    unsigned long long _state;
    RTCSessionDescription *_sdpPreferringCodec;
    RTCPeerConnection *_peerConnection;
    NSTimer *_audioTrackSamplingTimer;
    PTVGuestRoomConfiguration *_configuration;
    PTVAudioMonitor *_monitor;
    CDStruct_08766ad0 _features;
}

+ (id)unknownTransactionId;
+ (id)janusErrorResponse;
+ (id)badResponseError;
+ (void)sendPostRequest:(id)arg1 parameters:(id)arg2 headers:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void).cxx_destruct;
@property(retain, nonatomic) PTVAudioMonitor *monitor; // @synthesize monitor=_monitor;
@property(readonly, nonatomic) PTVGuestRoomConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) NSTimer *audioTrackSamplingTimer; // @synthesize audioTrackSamplingTimer=_audioTrackSamplingTimer;
@property(retain, nonatomic) RTCPeerConnection *peerConnection; // @synthesize peerConnection=_peerConnection;
@property(retain, nonatomic) RTCSessionDescription *sdpPreferringCodec; // @synthesize sdpPreferringCodec=_sdpPreferringCodec;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *userIdForJanusAuth; // @synthesize userIdForJanusAuth=_userIdForJanusAuth;
@property(nonatomic) __weak id <PTVJanusVideoRoomPluginHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) CDStruct_08766ad0 features; // @synthesize features=_features;
@property(nonatomic) __weak PTVAudioMonitor *localAudioMonitor; // @synthesize localAudioMonitor=_localAudioMonitor;
@property(nonatomic) _Bool hasTimedOutSubscribe; // @synthesize hasTimedOutSubscribe=_hasTimedOutSubscribe;
@property(retain, nonatomic) NSTimer *subscribeTimer; // @synthesize subscribeTimer=_subscribeTimer;
@property(nonatomic) _Bool isRestartingICE; // @synthesize isRestartingICE=_isRestartingICE;
@property(readonly, nonatomic) _Bool isAudioOnly; // @synthesize isAudioOnly=_isAudioOnly;
@property(readonly, nonatomic) unsigned long long publisherId; // @synthesize publisherId=_publisherId;
@property(retain, nonatomic) PTVWebRTCMediaStream *remoteMediaStream; // @synthesize remoteMediaStream=_remoteMediaStream;
@property(readonly, copy, nonatomic) NSArray *streams; // @synthesize streams=_streams;
@property(readonly, nonatomic) unsigned long long listenerFeedId; // @synthesize listenerFeedId=_listenerFeedId;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(readonly, nonatomic) unsigned long long role; // @synthesize role=_role;
@property(nonatomic) unsigned long long handlerId; // @synthesize handlerId=_handlerId;
- (void)throwDebugAssertionOrLogEventWithFormat:(id)arg1;
- (void)sendLogEntryToDelegate:(id)arg1;
- (id)preferredVideoCodec;
- (id)iceRestartOfferConstraints;
- (id)defaultOfferConstraints;
- (id)defaultAnswerConstraints;
- (id)defaultPeerConnectionConstraints;
- (id)defaultMediaAudioConstraints;
- (void)setMaxBitrate:(id)arg1 forSender:(id)arg2;
- (void)setMaxBitrateForPeerConnectionSenders;
- (id)streamName;
- (void)_ptv_collectStatsForTrack:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)collectStatsWithCompletion:(CDUnknownBlockType)arg1;
- (void)_ptv_didReceiveAudioTrackStatsReports:(id)arg1;
- (void)requestAudioLevel;
- (void)stopObservingAudioLevel;
- (void)startObservingAudioLevel;
- (_Bool)shouldUseSimulcast;
- (id)createAudioSender;
- (id)createVideoSender;
- (id)getAudioTrackId;
- (id)getVideoTrackId;
- (void)didRemoveTrack:(id)arg1;
- (void)didAddTrack:(id)arg1;
@property(readonly, nonatomic) _Bool isPeerConnectionConnected;
@property(readonly, nonatomic) _Bool isFullyConnected;
- (void)shutdownPeerConnection;
- (void)sendJanusRoomPluginRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)didGenerateIceCandidate:(id)arg1;
- (void)didChangeConnectionState:(long long)arg1;
- (void)sendSdp:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)processJanusOfferOrAnswer:(id)arg1 isOffer:(_Bool)arg2;
- (void)iceRestartIgnoreState:(_Bool)arg1;
- (void)reconfigureWithVideo;
- (void)sendOffer;
- (void)startSignalingIfReady;
- (void)onWebRtcUp;
- (void)onStarted;
- (id)onLeaving:(id)arg1;
- (id)onUnpublished:(id)arg1;
- (id)onConfiguredWithSdp:(id)arg1 isOffer:(_Bool)arg2;
- (id)onListenerAttachedWithOfferSdp:(id)arg1;
- (id)onJoinedRoom:(id)arg1;
- (void)updateIceServer:(id)arg1;
- (void)unpublishWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)joinRoomWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)destroyRoomWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)createRoomWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)destroy:(CDUnknownBlockType)arg1;
- (void)detach:(CDUnknownBlockType)arg1;
- (void)attach:(CDUnknownBlockType)arg1;
- (void)didError:(id)arg1;
- (void)notify:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithSubscriberHandlerFeatures:(CDStruct_08766ad0)arg1 configuration:(id)arg2 delegate:(id)arg3 janusSessionId:(unsigned long long)arg4 userIdForJanusAuth:(id)arg5 userId:(id)arg6 adminUserId:(id)arg7 iceServer:(id)arg8 peerConnectionFactory:(id)arg9 listenerFeedId:(unsigned long long)arg10 streams:(id)arg11;
- (id)initWithFeatures:(CDStruct_08766ad0)arg1 configuration:(id)arg2 delegate:(id)arg3 janusSessionId:(unsigned long long)arg4 userIdForJanusAuth:(id)arg5 role:(unsigned long long)arg6 userId:(id)arg7 adminUserId:(id)arg8 iceServer:(id)arg9 peerConnectionFactory:(id)arg10;
- (void)peerConnection:(id)arg1 didSetSessionDescriptionWithError:(id)arg2 makeAnswerIfNeeded:(_Bool)arg3;
- (void)peerConnection:(id)arg1 didCreateSessionDescription:(id)arg2 makeAnswerIfNeeded:(_Bool)arg3 error:(id)arg4;
- (void)peerConnection:(id)arg1 didOpenDataChannel:(id)arg2;
- (void)peerConnection:(id)arg1 didRemoveIceCandidates:(id)arg2;
- (void)peerConnection:(id)arg1 didGenerateIceCandidate:(id)arg2;
- (void)peerConnection:(id)arg1 didChangeIceGatheringState:(long long)arg2;
- (void)peerConnection:(id)arg1 didChangeConnectionState:(long long)arg2;
- (void)peerConnection:(id)arg1 didChangeIceConnectionState:(long long)arg2;
- (void)peerConnectionShouldNegotiate:(id)arg1;
- (void)peerConnection:(id)arg1 didRemoveReceiver:(id)arg2;
- (void)peerConnection:(id)arg1 didRemoveStream:(id)arg2;
- (void)peerConnection:(id)arg1 didAddReceiver:(id)arg2 streams:(id)arg3;
- (void)peerConnection:(id)arg1 didAddStream:(id)arg2;
- (void)peerConnection:(id)arg1 didChangeSignalingState:(long long)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

