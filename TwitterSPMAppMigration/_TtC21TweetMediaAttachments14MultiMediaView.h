//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class MISSING_TYPE, NSArray, TIPImagePipeline;
@protocol _TtP21TweetMediaAttachments18MultiMediaPlayable_;

@interface _TtC21TweetMediaAttachments14MultiMediaView : UIView
{
    MISSING_TYPE *parentScrollView;
    MISSING_TYPE *inlineMediaSourceStatusId;
    MISSING_TYPE *multiPhotoTapBlock;
    MISSING_TYPE *multiPhotoDoubleTapBlock;
    MISSING_TYPE *multiPhotoLoadedBlock;
    MISSING_TYPE *multiPhotoLoadFailedBlock;
    MISSING_TYPE *multiPhotoAltTextTapBlock;
    MISSING_TYPE *options;
    MISSING_TYPE *displayType;
    MISSING_TYPE *useAdaptiveMediaLayout;
    MISSING_TYPE *gutterWidth;
    MISSING_TYPE *borderCornerRadius;
    MISSING_TYPE *isBorderHidden;
    MISSING_TYPE *imagePipeline;
    MISSING_TYPE *isAltTextBadgeEnabled;
    MISSING_TYPE *autoplayableGeometryView;
    MISSING_TYPE *mediaEntries;
    MISSING_TYPE *imageViewPool;
    MISSING_TYPE *playableViews;
    MISSING_TYPE *$__lazy_storage_$_autoplayDisablingFilter;
    MISSING_TYPE *$__lazy_storage_$_autoplayUpdatePolicy;
    MISSING_TYPE *$__lazy_storage_$_videoErrorFilterPolicy;
    MISSING_TYPE *$__lazy_storage_$_advancingAutoplayPolicy;
    MISSING_TYPE *autoplayManager;
}

+ (double)adaptiveMediaHeightWithSquareAspectRatioForWidth:(double)arg1 imageSize:(struct CGSize)arg2;
+ (struct CGSize)preferredSizeForWidth:(double)arg1 mediaCount:(long long)arg2 primaryMediaDimensions:(struct CGSize)arg3 isAttachmentPlayer:(_Bool)arg4 displayType:(long long)arg5 isAutoplayEnabled:(_Bool)arg6;
+ (double)mediaMaximumImageAspectRatio;
+ (double)mediaMinimumImageAspectRatio;
+ (double)defaultHeightOverWidthRatio;
- (void).cxx_destruct;
- (void)multiPhotoDidTap:(id)arg1;
- (void)multiPhotoDidDoubleTap:(id)arg1;
- (void)reset;
@property(nonatomic) _Bool altTextBadgeEnabled; // @synthesize altTextBadgeEnabled=isAltTextBadgeEnabled;
- (id)mediaInfoAtIndex:(long long)arg1;
- (long long)mediaItemContentModeAtIndex:(long long)arg1;
- (struct CGRect)mediaItemContentsRectAtIndex:(long long)arg1;
- (id)altTextBadgeAtIndex:(long long)arg1;
- (id)mediaViewAtIndex:(long long)arg1;
- (id)imageAtIndex:(long long)arg1;
- (long long)mediaIndexAtPoint:(struct CGPoint)arg1;
@property(nonatomic, retain) TIPImagePipeline *imagePipeline; // @synthesize imagePipeline;
@property(nonatomic) double borderCornerRadius; // @synthesize borderCornerRadius;
@property(nonatomic) double gutterWidth; // @synthesize gutterWidth;
@property(nonatomic, readonly) UIView<_TtP21TweetMediaAttachments18MultiMediaPlayable_> *activePlayableView;
@property(nonatomic, copy) NSArray *images;
@property(nonatomic) _Bool useAdaptiveMediaLayout; // @synthesize useAdaptiveMediaLayout;
@property(nonatomic) long long displayType; // @synthesize displayType;
@property(nonatomic, copy) CDUnknownBlockType multiPhotoAltTextTapBlock;
@property(nonatomic, copy) CDUnknownBlockType multiPhotoLoadFailedBlock;
@property(nonatomic, copy) CDUnknownBlockType multiPhotoLoadedBlock;
@property(nonatomic, copy) CDUnknownBlockType multiPhotoDoubleTapBlock;
@property(nonatomic, copy) CDUnknownBlockType multiPhotoTapBlock;
@property(nonatomic, readonly) long long inlineMediaSourceStatusId;
@property(nonatomic, readonly) NSArray *inlineMediaInfos;
@property(nonatomic, readonly) long long numberOfVisibleMediaViews;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 images:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (long long)tui_scaleAspectFillFocusModeForFetchHelper:(id)arg1;
- (id)tui_focusRectanglesForFocusMode:(long long)arg1 inBounds:(struct CGRect)arg2 forFetchHelper:(id)arg3;
- (void)tui_fetchHelper:(id)arg1 readyToConfigureView:(id)arg2 state:(long long)arg3;
- (void)tui_fetchHelper:(id)arg1 didFailToLoadImageWithError:(id)arg2;
- (void)tui_fetchHelper:(id)arg1 didLoadInitialImageFromSource:(long long)arg2;
- (void)willResignAsActiveAutoplayableWithManager:(id)arg1;
- (void)didBecomeActiveAutoplayableWithManager:(id)arg1;
@property(nonatomic, readonly) long long autoplayableType;
@property(nonatomic, readonly) UIView *autoplayableView;

@end

