//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableDictionary, NSOperationQueue, NSString;

@interface TFCCardPersistedStateManager : NSObject
{
    NSString *_accountID;
    NSMutableDictionary *_cards;
    NSDictionary *_initialCardLoadOperations;
    NSOperationQueue *_initialCardLoadOperationQueue;
}

+ (id)_cardsDirectoryNameForAccountID:(id)arg1;
+ (id)_cardsDirectoryPathForAccountID:(id)arg1;
+ (id)_cardNameForCacheId:(id)arg1;
+ (id)_fullPathForCacheId:(id)arg1 withAccountID:(id)arg2;
+ (id)_cardDirectoryPathForCacheId:(id)arg1 withAccountID:(id)arg2;
+ (CDStruct_762bc9ff *)_inMemoryQueue;
+ (id)_persistenceQueue;
+ (void)purgePersistedDirectoriesExceptAccountIDArray:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (_Bool)isConversationCardUnlockedForCardData:(id)arg1 account:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) NSOperationQueue *initialCardLoadOperationQueue; // @synthesize initialCardLoadOperationQueue=_initialCardLoadOperationQueue;
@property(retain, nonatomic) NSDictionary *initialCardLoadOperations; // @synthesize initialCardLoadOperations=_initialCardLoadOperations;
@property(retain, nonatomic) NSMutableDictionary *cards; // @synthesize cards=_cards;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
- (void)waitForDiskSynchronization;
- (void)persistence_ensureAccountCardsDirectoryExists;
- (void)removeCardStateAtPath:(id)arg1;
- (void)persistence_saveCardStateToDisk:(id)arg1 forCacheId:(id)arg2;
- (id)persistence_cardUrlsFromDiskSortedByAccessDate;
- (id)persistence_cardForFileUrl:(id)arg1;
- (void)persistence_loadMostRecentCardsFromDiskAndCleanup;
- (void)waitOnInitialLoadOperationForCardWithName:(id)arg1;
- (void)clearAllCardsForCurrentUser;
- (void)clearAllCardsForCurrentUserWithCompletion:(CDUnknownBlockType)arg1;
- (void)removeCacheWithId:(id)arg1;
- (void)removeValueForKey:(id)arg1 withCacheId:(id)arg2;
- (id)objectForKey:(id)arg1 withCacheId:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 withCacheId:(id)arg3;
- (id)init;
- (id)initWithAccountID:(id)arg1;

@end

