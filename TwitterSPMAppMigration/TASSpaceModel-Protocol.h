//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <TwitterAppSPMMigration/NSObject-Protocol.h>

@class NSArray, NSDate, NSDictionary, NSString, NSURL, TASClipData, TASSettings, TASSharingEvent, TASTitleValue, TASTooltipper, TCMCommunityModel, TFNTwitterMediaImagePipeline, TFSTwitterForwardPivot, TFSTwitterScribeItem, TFSTwitterUserReference, UIView, UIViewController;
@protocol TASSpaceModelObserver, TASSpacesContext, TASUserActionsHandler, TASUserModel, TASVoiceAccountPerspective, TAVPlayback, TFSTwitterCanonicalUser, _TtP18TwitterAudiospaces19TASTweetPerspective_;

@protocol TASSpaceModel <NSObject>
@property(nonatomic, readonly) TCMCommunityModel *communityModel;
@property(nonatomic, readonly) NSString *communityID;
- (NSArray *)ownedViewControllers;
- (UIViewController *)debugViewController;
- (void)updateInterfaceOrientation;
@property(nonatomic) long long videoPresentationMode;
@property(nonatomic) long long localCameraState;
@property(nonatomic, readonly) _Bool canUseLocalCamera;
@property(nonatomic, readonly) _Bool isPhoneCameraInFrontPosition;
- (void)selectNextPhoneCamera;
@property(nonatomic, readonly) _Bool canSelectNextPhoneCamera;
@property(nonatomic, readonly) UIView *localCameraView;
@property(nonatomic, readonly) double liveVideoAspect;
@property(nonatomic, readonly) UIView *liveVideoView;
- (void)updateWithUsers:(NSArray *)arg1 totalUsersCount:(unsigned long long)arg2;
- (void)sendSharingEvent:(TASSharingEvent *)arg1;
- (NSArray *)userDenylistActionItemsForUser:(id <TFSTwitterCanonicalUser>)arg1 withStyle:(long long)arg2 handler:(id <TASUserActionsHandler>)arg3;
- (NSArray *)userActionItemsForUser:(id <TFSTwitterCanonicalUser>)arg1 withStyle:(long long)arg2 handler:(id <TASUserActionsHandler>)arg3;
- (NSDictionary *)scribeParameters;
- (TFSTwitterScribeItem *)scribeItem;
- (void)usersWithUserReferences:(NSArray *)arg1 completion:(void (^)(NSDictionary *))arg2;
- (void)userWithUserReference:(TFSTwitterUserReference *)arg1 completion:(void (^)(id <TFSTwitterCanonicalUser>))arg2;
- (id <TASUserModel>)userModelWithUser:(TFSTwitterUserReference *)arg1;
- (void)sendPrivateEmoji:(NSString *)arg1 toUser:(TFSTwitterUserReference *)arg2;
- (void)sendEmoji:(NSString *)arg1;
- (void)updateSettings:(TASSettings *)arg1;
- (void)resignAsSpeakerOrAdmin;
- (void)switchAsListener;
- (_Bool)canSwitchToListening:(TFSTwitterUserReference *)arg1;
- (void)cancelSwitchAsSpeaker;
- (void)switchAsSpeaker;
- (void)updateReplayStartTime:(double)arg1;
- (void)updateSettingsTitle:(NSString *)arg1;
@property(nonatomic, readonly) NSString *participantsCountString;
@property(nonatomic, copy) NSString *raisedHandEmoji;
@property(nonatomic, readonly) _Bool canRaiseHand;
@property(nonatomic, readonly) _Bool playAudio;
- (void)updatePlayAudio:(_Bool)arg1;
- (void)togglePlayAudio;
- (void)didUpdateAmbientBackgroundMusic;
@property(nonatomic, readonly) _Bool isAmbientBackgroundMusicAvailable;
- (void)toggleMuteEveryone;
- (void)toggleMuteUser:(TFSTwitterUserReference *)arg1;
- (void)toggleMute;
- (_Bool)canMuteSpeaker:(TFSTwitterUserReference *)arg1;
- (void)removeUserFromAdmins:(TFSTwitterUserReference *)arg1;
- (_Bool)canRemoveUserFromAdmins:(TFSTwitterUserReference *)arg1;
- (void)switchAsAdmin;
- (_Bool)isUserPendingAdmin:(TFSTwitterUserReference *)arg1;
- (void)cancelInvitationAsAdminForUser:(TFSTwitterUserReference *)arg1;
- (_Bool)canCancelInviteUserAsAdmin:(TFSTwitterUserReference *)arg1;
- (void)inviteUsersAsAdmins:(NSArray *)arg1;
- (_Bool)isBelowAdminInviteLimitForUser:(TFSTwitterUserReference *)arg1;
- (_Bool)hasAdminInvitesRemaining;
- (_Bool)canInviteUserAsAdmin:(TFSTwitterUserReference *)arg1;
- (void)cancelInvitationAsSpeakerForUser:(TFSTwitterUserReference *)arg1;
- (void)inviteUserAsSpeaker:(TFSTwitterUserReference *)arg1;
- (_Bool)canInviteUserAsSpeaker:(TFSTwitterUserReference *)arg1;
- (void)removeUserFromSpeakers:(TFSTwitterUserReference *)arg1;
- (_Bool)canRemoveUserFromSpeakers:(TFSTwitterUserReference *)arg1;
- (void)inviteSpeakers:(NSArray *)arg1;
- (void)rejectUserAsSpeaker:(TFSTwitterUserReference *)arg1;
- (_Bool)canRejectUserAsSpeaker:(TFSTwitterUserReference *)arg1;
- (void)addUserAsSpeaker:(TFSTwitterUserReference *)arg1;
- (_Bool)canAddUserAsSpeaker:(TFSTwitterUserReference *)arg1;
- (void)locallyHideSpace;
- (NSArray *)reportMenuActionItemsForSpaceFromFeed:(_Bool)arg1 completion:(void (^)(void))arg2;
- (NSArray *)reportMenuActionItemsForUser:(TFSTwitterUserReference *)arg1 addToDenylist:(_Bool)arg2;
- (void)unblockUser:(TFSTwitterUserReference *)arg1;
- (void)blockUser:(TFSTwitterUserReference *)arg1 addToDenylist:(_Bool)arg2;
- (void)allowlistWithCompletion:(void (^)(NSArray *, NSError *))arg1;
- (void)removeUserFromAllowlist:(TFSTwitterUserReference *)arg1;
- (void)addUsersToAllowlist:(NSArray *)arg1;
- (void)denylistWithCompletion:(void (^)(NSArray *, NSError *))arg1;
- (void)removeUserFromDenylist:(TFSTwitterUserReference *)arg1;
- (void)addUserToDenylist:(TFSTwitterUserReference *)arg1;
- (_Bool)canAddUserToDenyList:(TFSTwitterUserReference *)arg1;
- (void)removeSpaceModelObserver:(id <TASSpaceModelObserver>)arg1;
- (void)addSpaceModelObserver:(id <TASSpaceModelObserver>)arg1;
- (void)approveConferenceJoinRequestWithIds:(NSArray *)arg1;
- (void)startScheduledSpace;
- (void)unsubscribeScheduledAudiospaceFromSender:(id)arg1;
- (void)subscribeScheduledAudiospaceFromSender:(id)arg1 automaticToast:(_Bool)arg2;
- (void)updateAudioHeartbeatTimer;
- (void)shutdown;
- (void)toggleReplaySpace:(_Bool)arg1 completion:(void (^)(_Bool))arg2;
- (void)setupReplay;
- (void)joinOrCreateSpaceWithSourceParameters:(NSDictionary *)arg1;
- (TASClipData *)generateClipDataWithClipDuration:(double)arg1;
@property(nonatomic) _Bool isClippingEnabled;
@property(nonatomic, readonly) _Bool isClippingSettingsEnabled;
@property(nonatomic, readonly) _Bool isSpaceEligibleToEnableClipping;
- (void)reconnectToShutdown;
- (void)reconnectHostWithCompletion:(void (^)(_Bool))arg1;
- (void)prepareReconnectHostWithCompletion:(void (^)(_Bool))arg1;
- (void)resetOnLeaveSpace;
- (void)previewSpaceWithPlayback:(_Bool)arg1;
- (void)loadSpaceWithCompletion:(void (^)(TFSTwitterAudiospace *, NSError *))arg1;
@property(nonatomic, readonly) _Bool disallowJoin;
@property(nonatomic, readonly) _Bool isTrending;
@property(nonatomic, readonly) _Bool isHostTimedOut;
@property(nonatomic, readonly) _Bool canReplaySpace;
@property(nonatomic, readonly) _Bool isRecordingEnabled;
@property(nonatomic, readonly) _Bool isEntityTweetSharingEnabled;
@property(nonatomic, readonly) _Bool shouldUseEntityStatus;
@property(nonatomic, readonly) _Bool isSharingEnabled;
@property(nonatomic, readonly) _Bool shouldPresentSurvey;
@property(nonatomic) _Bool isTransitioningToAdmin;
@property(nonatomic, readonly) NSString *trackMetadata;
@property(nonatomic, readonly) TFSTwitterForwardPivot *forwardPivot;
@property(nonatomic, readonly) TASTooltipper *tooltipper;
@property(nonatomic, readonly) id <TAVPlayback> playback;
@property(nonatomic) _Bool isIncognito;
@property(nonatomic) long long automaticJoiningAsSpeakerStatus;
@property(nonatomic, readonly) TASSettings *settings;
@property(nonatomic) _Bool isEditingTitle;
@property(nonatomic, readonly) _Bool isCaptionsAvailable;
@property(nonatomic, readonly) _Bool isCaptionsViewHidden;
@property(nonatomic) _Bool isCaptionsVisible;
@property(nonatomic, readonly) id <_TtP18TwitterAudiospaces19TASTweetPerspective_> entityStatus;
@property(nonatomic, readonly) NSDate *expectedTimeout;
@property(nonatomic, readonly) NSURL *authErrorRectifyURL;
@property(nonatomic, readonly) NSString *authErrorMessage;
@property(nonatomic, readonly) _Bool isPlaybackAvailable;
@property(nonatomic, readonly) unsigned long long subscriberCount;
@property(nonatomic, readonly) _Bool isSubscribed;
@property(nonatomic, readonly) NSDate *endDate;
@property(nonatomic, readonly) NSDate *startDate;
@property(nonatomic, readonly) NSDate *scheduledStartDate;
@property(nonatomic, readonly) NSDate *cancellationDate;
@property(nonatomic, readonly) NSDate *creationDate;
@property(nonatomic, readonly) NSString *shareLink;
@property(nonatomic, readonly) NSString *subtitle;
@property(nonatomic, readonly) TASTitleValue *titleValue;
@property(nonatomic, readonly) NSArray *topics;
@property(nonatomic, readonly) unsigned long long totalParticipatedLiveAndReplayCount;
@property(nonatomic, readonly) unsigned long long totalReplayWatchedCount;
@property(nonatomic, readonly) unsigned long long totalLiveParticipatedCount;
@property(nonatomic, readonly) unsigned long long blockedSpeakersCount;
@property(nonatomic, readonly) unsigned long long additionalPeopleCount;
@property(nonatomic, readonly) unsigned long long totalPeopleCount;
@property(nonatomic, readonly) id <TASUserModel> creatorUserModel;
@property(nonatomic, readonly) id <TASUserModel> loggedInUserModel;
@property(nonatomic, readonly) NSArray *usersModels;
@property(nonatomic, readonly) unsigned long long maximumNumberOfJoinGuestSounds;
@property(nonatomic, readonly) unsigned long long maximumNumberOfAdmins;
@property(nonatomic, readonly) unsigned long long maximumNumberOfSpeakers;
@property(nonatomic, readonly) long long connectionState;
@property(nonatomic, readonly) TFNTwitterMediaImagePipeline *imagePipeline;
@property(nonatomic, readonly) NSString *conferenceKey;
@property(nonatomic, readonly) NSString *spaceID;
@property(nonatomic, readonly) id <TASVoiceAccountPerspective> account;
@property(nonatomic, readonly) id <TASSpacesContext> context;
@end

